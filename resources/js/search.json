[[{"i":"bem-vindo-à-wiki-da-struct","l":"Bem-Vindo à Wiki da {struct}","p":["Este é um espaço no Retype com o objetivo de concentrar todo o conhecimento possível da Struct em um só lugar."]},{"l":"Conteúdo","p":["Neste espaço deve-se concentrar todos os conhecimentos de gestão e execução de projetos assim como gestão da Struct em si. Por favor, contribua toda vez que verificar que algo está faltando. Caso tenha dúvidas de como trabalhar aqui, acesse a documentação do Retype."]},{"l":"Primeiros Passos"},{"l":"Repositório","p":["Para começar a trabalhar no DocStruct, clone o repositório no GitHub, acesse a branch da sua diretoria e começe a fazer as modificações nela. É recomendado avisar os outros membros da sua diretoria, para que não haja duas pessoas trabalhando na mesma branch ao mesmo tempo."]},{"i":"observações-importantes","l":"Observações importantes:","p":["Use, preferencialmente, a branch de desenvolvimento da sua diretoria para fazer mudanças;","Jamais faça mudanças diretamente na main (boatos de que quem o fez não está mais na Struct para contar a história);","Antes de abrir um pull request, verifique o funcionamento da branch no ambiente de desenvolvimento;"]},{"l":"Rodando localmente","p":["Instale a nova ferramenta para documentação com o gerenciador de pacotes desejado, e rode retype start:"]},{"l":"Arquivos","p":["Para poder começar a documentar com retype:","Criação do diretório: os futuros diretórios e seus arquivos .md aparecerão na barra lateral, com seus próprios nomes caso não sejam personalizados/configurados.","Configuração: cria-se um arquivo .yml para algumas configurações, como os nomes dos diretóros na barra lateral, ícones para representação etc.","Conteúdo: enfim, cria-se um arquivo .md, onde será estruturada e organizada toda a documentação por meio das ferramentas do Retype."]},{"i":"#","p":["É possível criar subdiretórios, basta fazer o mesmo processo só que dentro de um diretório."]},{"l":"Algumas ferramentas importantes"},{"l":"Alerta","p":["Este é um alerta do retype"]},{"l":"Código"},{"l":"Container","p":["A vantagem do container é você poder personalizar o css separadamente.","Este é um container personalizado"]},{"l":"Table","p":["Para mostrar a diferência entre aparência e código, usamos o componente table"]},{"i":"#","p":["Para mais informações sobre documentação em Retype, consulte a seção especificações."]},{"l":"Especificações"},{"l":"Git e GitHub","p":["Para realizar modificações nas páginas do Retype, é necessário ter um conhecimento básico em alguns conceitos de git, como: add, commit, pull, clone, push e branch. Caso não possua domínio sobre esses conceitos ou deseje revisar algum, a Struct possui um material apresentando uma explicação sucinta dos principais comandos. Caso queira obter informações mais detalhadas, pode-se consultar o livro Pro Git gratuitamente."]},{"l":"Funcionamento","p":["O Retype usa arquivos de formato markdown, como componentes, para a estruturação da documentação online, os exibindo na forma de páginas web. O roteamento dos componentes é feita de forma automática pelo Retype e de acordo com os diretórios do projeto. O diretório raiz do projeto pode conter um arquivo .yml que cuida da configuração do site, como a navbar, footer etc. Assim como, cada componente do projeto também pode conter um arquivo .yml para a configuração separada do componente e um arquivo .md para a própria estruturação em markdown.","Em um arquivo .yml, com nome padrão de index.yml, é feita a personalização e configuração do site ou de um componente específico. Para a configuração do site, pode ser necessário a consulta das ferramentas providas pelo Retype. Já para a configuração de um componente específico há outras ferramentas disponíveis.","Em um arquivo .md é feita a estruturação em markdown do site ou componente, sem ele nada deve aparecer no site ou no componente. O Retype provê muitas ferramentas para estruturar o conteúdo da documentação. Caso deseje aprender mais sobre como escrever em arquivos markdown, seria interessante também dar uma olhada em sua sintaxe básica."]}],[{"i":"o-que-é-nextauth","l":"O que é NextAuth?"},{"l":"Next Auth","p":["Essa documentação foi desenvolvida assumindo que o leitor tem familiaridade com os conceitos básicos de Next, se não for o caso consulte o DocStruct de Next.js para qualquer dúvida.","O Next Auth é uma biblioteca de autenticação para projetos desenvolvidos com o framework Next.js. Essa biblioteca facilita a implementação de autenticação de usuário vindos de um back-end já existente (autenticação por terceiros, por exemplo). É possível utilizar credenciais, como e-mail e senha, mas a biblioteca dá maior foco ao OAuth, fornecida pelo Google, GitHUb, etc. garantindo a segurança e facilitando a implementação.","Para acessar a documentação de instalação e implementação do Next Auth, clique Aqui."]}],[{"l":"Instalação","p":["Para adicionar o Next Auth ao projeto basta utilizar o seguinte comando no terminal: yarn add next-auth , ou pnpm add next-auth se estiver utilizando o pnpm."]},{"l":"Implementação","p":["!!Atenção: verifique a versão do Next.js utilizada no projeto e se o tipo de roteamento usado é o Pages Router ou o App Router, pois o modo de implementação é diferente."]},{"i":"para-versão-de-nextjs-anterior-à-132","l":"Para versão de Next.js anterior à 13.2","p":["Para adicionar o NextAuth.js a um projeto, crie um arquivo chamado [...nextauth].js na pasta pages/api/auth/ e preencha-o com o código a baixo. Este arquivo contém o manipulador de rotas dinâmicas para o NextAuth.js, que também conterá todas as configurações globais do NextAuth.js e todas as solicitações para /api/auth/*( signIn, callback, signOut, etc.) serão automaticamente tratadas pelo NextAuth.js."]},{"i":"para-versão-de-nextjs-porterior-à-132-com-o-app-router","l":"Para versão de Next.js porterior à 13.2 com o App Router","p":["Nesse caso, crie um arquivo chamado route.js na pasta app/api/auth/[...nextauth]/ e preencha-o com o código a baixo.","Exemplo de route.js com GoogleProvider(Google como autenticador):"]},{"l":"Utilização"},{"l":"Configurando useSession","p":["O useSession é um importante hook do React que é utilizado nas aplicações Next Auth para recuperar informações da sessão de usuário.Para utilizá-lo primeiro é preciso expor o conteudo da sessão de usuário por meio do SessionProvider /,para implementá-lo,dentro da pasta app, crie uma pasta components e, dentro desta um arquivo provider.tsx com o seguinte código:","Agora, no aqrquivo layout.tsx, adicione as tags de Providers por fora do elemento {children} como no exemplo:","Dessa forma, o useSession terá acesso aos dados e status da sessão.","A desestruturação dos pageProps em session e no resto das pageProps significa uma alteração no comportamento normal de getServerSideProps e getStaticProps.","Caso pegue a session no servidor e tente passar para a página como suas pageProps, a session será interceptada aqui no App e nunca chegará no seu componente da página. Ao invés disso será usada para alimentar o hook useSession, portanto use-o. Exemplo:"]},{"l":"Utilização do useSession","p":["O Hook do React useSession usado no NextAuth.js é a maneira mais fácil de verificar se alguém está autenticado.Como no exemplo de botão de SignIn:","A ideia é armazenar os resultados do useSession em props para aferir se o usuário ja foi autenticado."]},{"l":"Autenticação","p":["O Next Auth possibilita que o critério de autenticação(provedores) seja por meio de credenciais (nome,senha), email ou autenticações externas(google,GitHub,etc.)."]},{"l":"OAuth","p":["OAuth é o processo de autenticação do NextAuth que utiliza de processos de login externos preexistentes, ou seja, dá ao usúario a opção de realizar a autenticação por outra plataforma como Github, Google, Twitter, etc.","Por serem processos externos de várias fontes diferentes, cada autenticação escolhida terá uma documentação específica diferente. Para acessar todos os provedores de autenticação externa suportados pelo NextAuth e suas respectivas documentações clique Aqui.","Segue um exemplo demonstrativo do Google como provedor OAuth:"]},{"i":"como-conseguir-as-credenciais-para-a-autenticação-externa-next-authgoogle","l":"Como conseguir as credenciais para a autenticação externa Next auth(Google)","p":["Utilizarei o exemplo do Google como autenticador externo, pela grande gama de documentação disponível.","Para configurar a autenticação com o Next Auth usando o Google como provedor, você precisará obter as credenciais apropriadas do Google. Siga estas etapas:","Acesse o Console de Desenvolvedores do Google.","Com o projeto criado e/ou adicionado na plataforma, na barra de opções lateral clique no item Credenciais e em seguida, no botão Criar credenciais, escolha ID do cliente OAuth como tipo de credencial, e configure as informações do OAuth de acordo com as necessidades do projeto e seguindo as intruções.","Preencha o campo Tipo de aplicativo com a opção Aplicativo da Web, nas seções Origens JavaScript autorizadas e URLs de redirecionamento autorizados, adicione URLs de acordo com a natureza do aplicativo, por exemplo, vale colocar http://localhost:3000 e http://localhost:3000/api/auth/callback/google respectivamente, para uma aplicação que está rodando localmente. E , por fim ,clique em Criar. OBS:A segunda URL depende de como foram implementadas as rotas no projeto!!","Após a criação do cliente OAuth, serão exibidos O ID do cliente e a Chave secreta do cliente.","Por fim, crie um arquivo .env para guardar essas informações.Como no exemplo:","Com as credenciais armazenadas de forma segura em seu arquivo .env, você pode configurar a autenticação com o provedor do Google de maneira segura e eficaz em seu projeto Next Auth."]},{"l":"Credenciais","p":["A autenticação por Credenciais permite lidar com o login usando credenciais arbitrárias, como nome de usuário e senha, ele vem com a restrição de que os usuários autenticados dessa maneira não se mantém no banco de dados e, consequentemente, é necessário o uso de tokens(id) para implementar a validação. Por exemplo:","É necessário ter um serviço de autenticação externo, ou criar um do zero, para poder usar o CredentialsProvider de forma realmente útil! O NextAuth nesse caso é muito menos útil! Considere recorrer a outras bibliotecas, como Lucia Auth."]}],[{"i":"o-que-é-next","l":"O que é Next?","p":["O Next JS é um framework full-stack com suporte a TypeScript baseado em React, uma biblioteca, proporcionando algumas ferramentas adicionais já pré-instaladas juntamenta a ele e uma distribuição de pastas/diretórios fixa.","O diferencial deste framework e o que o levou à alta utilização no mercado é o ISR (Incremental Static Regeneration), o que possibilita otimização de busca de dados e boa performance em páginas estáticas juntamente com páginas dinâmicas, renderizadas pelo lado servidor (SSR).","Assim como o roteamento que, para rotas estáticas, é feito de forma automática e para configurações adicionais se torna extremamente prático. Além da pré-renderização Server-side Rendering (SSR) e Static Generation(SG) que, pela forma que os dados são buscados, proporciona melhor funcionamento e maior otimização."]}],[{"l":"Criando um projeto Next","p":["Next não é instalado de fato em sua máquina, é um conjunto de pacotes que são iniciados no momento em que um projeto Next é criado.","Requisitos:","É necessário possuir uma versão igual ou superio a 16.14 do Node.js.","São suportados macOS, Windows (incluindo WSL) e Linux."]},{"l":"Configuração Automática","p":["Na configuração automática, são feitas algumas perguntas no terminal pra configuração automática do framework. A configuração é feita na criação de um projeto next, para isso rode o comando no terminal:","Após isso, serão feitas algumas perguntas no terminal:","Para a pergunta nº:","Nome do projeto que irá ser feito.","Uso ou não de TypeScript no projeto.","Uso do ESLint, um analisador estático de código, que encontra problemas no código e alerta no editor de texto.","Uso do Tailwind CSS, a principal ferramenta de estilização usada em Next.js.","Opção do diretório src/ na pasta raiz do projeto, mais uma opção de organização para separar a pasta do projeto dos arquivos de configuração.","Opção de tipo de roteamento usado Pages Router e App Router (mais recente), nessa documentação iremos usar o Pages Router. Caso queira saber mais sobre a diferença entre os dois","A sétima e última estão relacionadas, respectivamente, a customização e configuração de importações, para facilitar a importação de alguma utilidade entre os diretórios, são como se fossem atalhos para imports. Caso queira saber mais a fundo, clique aqui."]},{"l":"Configuração Manual","p":["Pra criar um projeto Next.js manualmente, deve-se rodar o código no terminal:","Em seguida adicione o trecho de código ao arquivo package.json:","Nesse script definimos um objeto com as chaves:","dev e seu valor next dev para declararmos que o projeto está em modo de desenvolvimento.","build e valor next build para construir a aplicação para uso em produção.","start com next start para começar um servidor Next.js em produção.","lint com next lint para definir a configuração de ESLint embutida no Next.js."]},{"l":"Criando diretórios","p":["Como a configuração, neste caso, é manual, então algumas pastas não vem pré-configuradas no projeto. Logo, deve-se criar a pasta pages (pois estamos usando pages router) onde ficará as páginas a serem usadas na aplicação. Assim como, pode-se criar a pasta public, para arquivos estáticos como imagens, fontes, ícones etc.","Mais informações sobre como iniciar e configurar um projeto Next aqui."]}],[{"l":"Guia prático para desenvolver em Next","p":["Como citado, Next é um framework que implementa a biblioteca React. React estrutura a organização de suas páginas através da componentização, ou seja, as páginas são componentes (funções) chamadas em determinado momento, que irão retornar trechos HTML.","Deste modo, a primeira coisa que precisamos fazer é criar um componente React e fazer a estruturação dele."]},{"l":"Criação de Páginas","p":["Existem dois tipos de roteamento usados no Next, Pages Router e App Router. Usamos a primeira opção, logo não é necessário conhecer a segunda aqui.","Como usamos Pages Router, devemos criar nossas pastas e arquivos das páginas dentro da pasta pages.","Assim, criamos o componente React declarando uma função e exportando ela deste modo:","Esta função retorna um trecho HTML, composto de tags e componentes do próprio HTML, porém o Next proporciona alguns componentes especiais:"]},{"l":"Componentes Next"},{"l":"Head","p":["Este componente adiciona elementos para o head de uma página. Pode ser usado várias vezes em um mesmo componente e, assim, pode gerar duplicação, logo para evitar este problema identifique o head com o props key. Exemplo:"]},{"l":"Image","p":["O componente é usado para demonstrar imagens e possui propriedades bastante interessantes, sendo necessário importar o componente da biblioteca Next como no exemplo:","src representa uma imagem estática importada no próprio código ou o caminho da imagem, podendo ser tanto um caminho local quanto um link URL. Para links URL's externos, deve-se configurar o remotePatterns no arquivo next.config.ts, mais detalhes aqui.","width e height representam, respectivamente, o comprimento e altura da imagem em pixeis. Ambas propriedades são requeridas exceto em caso de imagens estáticas importadas.","alt é usado para definir uma descrição, caso aconteça algum erro que impossibilite o carregamento da imagem.","O componente Image possui vários props opcionais que podem ser úteis dependendo da situação, para saber mais consulte aqui"]},{"l":"Link","p":["O componente Link é um componente React para navegação entre rotas pelo lado do cliente, otimizando essa transição e evitando carregamentos desencessários da página.","href é o caminho que o navegador será redirecionado.","replace é usado para configurar se o componente Link redirecionará a mesma página para a rota referida (caso true) ou se irá abrir uma nova aba com a rota (caso false).","scroll, caso seja true, \"scrolla\" a página para o topo, caso seja false a posição se mantem a mesma. Por padrão, essa propriedade é true."]},{"l":"Layouts","p":["Agora que seus componentes React estão construídos, talvez precisemos de um layout. Pense na situação que seu site possui dois componentes que são fixos independente da página: a navbar e a footer. Podemos montar um layout, um modelo em que sempre possui a navbar e a footer envolvendo um componente dinâmico:","Fizemos o layout, o modelo que contém nossa navbar e nossa footer, e entre elas a children que vai ser o componente que o layout irá receber como parâmetro. Agora, precisamos colocar esse layout no componente MyApp, que é o componente primário da nossa aplicação, por onde todos os outros são executados:","Agora, qualquer componente no MyApp será executado dentro do Layout. Para mais informações sobre roteamento entre páginas, consulte na documentação do Next."]},{"l":"Roteamento","p":["Agora, como poderemos ter acesso às páginas construídas?","No Next, as páginas são roteadas de forma automática, ou seja, o caminho local (tirando o diretório raiz pages) da sua página será a rota. Assim, um componente no caminho pages/hello_world.tsx teria uma rota /hello_world.","Para rotas dinâmicas, o nome do arquivo do componente deve estar entre colchetes []. Assim, o que estiver entre os colchetes será a parte dinâmica da rota. Exemplo:","O caminho pages/user/profile/[id].tsx poderá ter uma rota /user/profile/3. Os segmentos dinâmicos podem ser acessados pelo uso do useRouter que devolve um objeto, onde, no caso anteriormente citado, os segmentos dinâmicos estariam no .query.id do objeto recebido.","Para mais informações sobre roteamento entre páginas, consulte na documentação do Next."]},{"l":"Métodos de busca de dados","p":["Com os componentes React construídos e o roteamento entre eles definidos, talvez precisemos de alguns métodos de busca de dados para obter as informações necessárias para a construção da página ou para uma devida comunicação entre as páginas.","Os seguintes exemplos serão dados usando fetch para simular uma comunicação com a API, mas usamos Axios para, de fato, solicitar requisições HTTP."]},{"l":"getStaticProps","p":["Imagine que você tem uma página que usa props estáticos ou propriedades que não mudam com grande frequência. Tendo isso em mente, não seria desnecessário minha página ser toda reconstruída e solicitar mais requests para o servidor quando eu quisesse, por exemplo, recarregá-la?","Percebendo isso, o getStaticProps resolve esse problema porque ele torna sua página estática, então quando tentamos recarregá-la não será preciso reconstruí-la novamente.","E, para tornar sua página estática, basta definir a função getStaticProps, atentando à tipagem característica do TypeSript:","Para mais informações, consulte a documentação do próprio Next."]},{"l":"getStaticPaths","p":["De forma semelhante ao getStaticProps, o getStaticPaths é usado para evitar reconstruções e requisições desnecessárias do site a partir da construção de páginas estáticas quando usando rotas dinâmicas, para cada rota.","Para usar o getStaticPaths, deve se definir a função na página, do mesmo modo que em getStaticProps. Além de que é necessário também definir o getStaticProps, pois a partir das rotas estáticas recebidas pelo getStaticPaths pegamos nossas propriedades/data, siga o exemplo:","Para mais informações sobre getStaticPaths ou o atributo fallback do mesmo, consulte a documentação do Next."]},{"l":"getServersideProps","p":["Vimos os métodos getStaticProps e getStaticPaths, que são usados quando não há mudanças frequentes nas informações ou atualizações não são tão necessárias. Porém, caso precisemos de um método de busca de dados que envolva informações dinâmicas, que mudam constantemente, podemos usar o getServerSideProps. Nele, a página é construída no lado do servidor e, então, mandada para o cliente. Deste modo, o tempo para interação do cliente com a página é um pouco maior, porém promove maior segurança.","Para usar o getServerSideProps, basta definir a função:","Para mais informações sobre getServerSideProps consulte a documentação do Next."]},{"l":"API","p":["Tendo o conhecimento necessário de métodos de busca de dados, precisamos definir nossa API e suas rotas, que é por onde iremos fazer a comunicação do cliente com o servidor e ter acesso aos dados.","Nosso projeto Next é monorepo, ou seja, ambos cliente e servidor são feitos no mesmo repositório. Deste modo, definimos nossa API primeiramente criando um diretório api dentro de pages."]},{"l":"Criando as rotas","p":["Assim como o roteamento das páginas, as rotas são organizadas pelos diretórios. Então, para fazermos uma chamada a uma determinada URL da api, o caminho será o diretório. Exemplo: pages/api/user/[id].tsx teria a rota api/user/[com algum id ou não]. E, então, podemos definir nossas rotas nela:","Superficialmente, deste modo são definidas as rotas. Porém para informações mais detalhadas sobre API, consulte a documentação do Next."]},{"l":"Chamando as rotas no cliente","p":["Agora, definidas as rotas, precisamos chamá-las no cliente. Podemos fazer isso usando Axios, faremos exemplos para os métodos HTTP (GET, POST, DELETE):"]},{"l":"GET","p":["Primeiramente, vamos fazer uma demonstração de requisição GET fazendo uma função para consumir esta requisição no cliente:"]},{"l":"POST","p":["Agora, fazendo para o método POST, o esquema é o mesmo, porém o uso do Axios é um pouco diferente:"]},{"l":"DELETE","p":["Com o método DELETE, geralmente manda-se uma rota dinâmica, com um ID que identifica o dado a ser deletado. Tendo isso em mente, a função pode trabalhar da seguinte maneira:","Para mais informações sobre chamadas da api, consulte a documentação do Axios."]}],[{"i":"o-que-é-prisma","l":"O que é Prisma?"},{"i":"o-que-é-orm-","l":"O que é ORM ?","p":["ORM, ou Mapeamento Objeto-Relacional, é uma técnica de programação que permite que os desenvolvedores de software interajam com bancos de dados relacionais usando objetos e classes no lugar de consultas SQL diretas. A ideia principal por trás do ORM é eliminar a necessidade de escrever consultas SQL manualmente e simplificar a interação entre o código da aplicação e o banco de dados relacional. Em vez de tratar as tabelas e registros do banco de dados como entidades separadas e escrever SQL para buscar, inserir, atualizar ou excluir dados, os desenvolvedores podem trabalhar com objetos em código que representam diretamente os dados do banco de dados. O ORM mapeia esses objetos para tabelas do banco de dados e vice-versa."]},{"i":"o-que-é-prisma","l":"O que é Prisma?","p":["O prisma é uma biblioteca desenvolvida em TypeScript, que tem suporte para ser usada nas linguagens .js/.ts. Ela possui diferentes módulos, entre eles estão:","Prisma db/migrate (Instalado com o CLI);","Prisma Studio (Instalado com o CLI);","Prisma Client (Instalado separadamente como client);","A ideia do Prisma é ser uma ORM. Ela pode ser utilizada no desenvolvimento de aplicações em JavaScript ou TypeScript, que necessitem de alguma estrutura de banco de dados. Ela é bem amigável com iniciantes- devido à sintaxe de fácil entendimento e à facilidade de construção das models - e permite segurança de tipos. É ruim em questão de performance, mas a gente nunca precisou de performance (pelo menos por enquanto).","Caso performance para queries mais complexas seja uma preocupação do projeto, veja a situação atual do Prisma ao lidar com joins (é um problema atualmente, em 2023).","Considere usar outra solução, como kisley, drizzle. Dependendo do cliente, até terceirizar e usar Planetscale, Turso, etc."]},{"l":"Conte-me mais","p":["O Prisma esconde a implementação em SQL das queries. Mostra pro usuário da biblioteca uma interface construída em TypeScript, o que significa que tem autocomplete e segurança de tipos na sua utilização. Também fornece funções de filtragem e ordenação de fácil utilização.","É nessa parte que o Prisma se destaca em relação às alternativas.","Essa abstração também fornece segurança de tipos pra sua API e frontend(caso use os tipos exportados pelo Prisma). Isso significa que, caso altere alguma model, os tipos do Prisma também mudarão, e o VSCode e ferramenta de verificação de código estático te alertarão caso esteja acessando algo que o banco de dados não retorna mais. Isso também fornece autocomplete na utilização das instâncias das models.","Outras bibliotecas em TypeScript também fornecem essa última parte ( segurança de tipos), mas possuem uma abstração e sintaxe mais próxima do SQL, dificultando entrada do iniciante/atrasando o desenvolvimento.","Considere a sintaxe do Kysely por exemplo:"]},{"l":"Prisma","p":["O core dessa biblioteca é o pacote prisma, que permite que você se conecte a um banco de dados e construa ou altere o seu schema, ou seja, construa ou altere a modelagem das entidades que seu banco de dados implementa. Por padrão ele usa o arquivo em prisma/schema.prisma como base para atualizar o schema do banco de dados, e necessita de uma variável de ambiente para localizar o banco de dados a ser alterado pelos comandos.","É um pacote adicionado como dependência de desenvolvedor, pois é uma ferramenta CLI (Command Line Interface), e não é executada por nenhum código do programa.","Talvez ce tenha que usar o Prisma CLI dentro do container pra fazer o schema do banco de dados de lá ser alterado. Vale a pena criar um script de inicialização pra isso, mas ainda não existe."]},{"l":"Prisma Client","p":["O cliente Prisma, pacote @prisma/client, permite usar código para ler e alterar as informações do banco de dados. Basta instanciar o cliente e fazer as chamadas para encontrar ou criar novos registros no banco de dados."]},{"l":"Prisma studio","p":["É um adicional do Prisma, que permite ver e alterar o estado do banco de dados por interface gráfica. Ele pode ser usado mesmo que Prisma não esteja sendo usado no projeto. Basta passar a url de conexão do banco de dados e tadan, interface gráfica."]}],[{"i":"como-instalar-o-prisma","l":"Como 'instalar' o Prisma?"},{"i":"configuração-do-prisma-cli","l":"Configuração do Prisma CLI.","p":["Primeiro adicione o pacote ao projeto:","Não. Só... não."]},{"i":"criar-arquivos-schemaprisma-e-env","l":"Criar arquivos schema.prisma e .env","p":["Não",".env: o arquivo para definir a URL de conexão do seu banco de dados.","prisma/schema.prisma: o arquivo de configuração principal para o seu projeto Prisma (incluirá o seu modelo de dados)."]},{"l":"Conectar o prisma ao seu banco de dados","p":["A maneira mais fácil é usar o SQLite, pois é um banco de dados contido num arquivo, sem precisar instalar nada. Além disso, para limpar o banco de dados, basta deletar o arquivo .sqlite.","Muitas vezes não é bom usar SQLite em produção. Por esse motivo, atualmente (em 2023) trocamos de SQLite para MySQL ao entrar em produção. Isso torna necessário realizar mudanças, como adicionar @db.Text aos campos String que podem conter mais de 256 caracteres, etc.","Adicione o conteúdo acima ao .env.example, caso ele não já esteja lá.","Ajude o coleguinha que daqui 2 anos vai tentar rodar seu projeto."]},{"l":"Configuração do Prisma Client","p":["Primeiro adicione o pacote ao projeto:","Não. Só... não."]},{"l":"Instanciando um cliente prisma","p":["Para podermos consumir/usar o banco de dados, precisamos instanciar um cliente. Como só deve ser instanciado um cliente por aplicação, é comum centralizarmos o código de instanciação em um único arquivo."]},{"l":"Mínima","p":["A forma mais simples de instanciar um novo cliente é:"]},{"l":"Melhorada","p":["A maneira anterior pode causar vazamento de memória em ambiente de desenvolvimento. Às vezes ao recarregar a aplicação, que acontece quando salvamos um arquivo, o código que gera o cliente é rodado outra vez. Isso pode acabar gerando várias instâncias."]},{"i":"quer-saber-mais-prisma-orm-","l":"Quer saber mais Prisma ORM ?","p":["-----------------> Documentação oficial do Prisma.<--------------------"]},{"l":"Configurar banco de dados PostgreSQL usando o Docker","p":["Caso queira usar PostgreSQL em desenvolvimento, pode utilizar esta seção como referência para a criação do docker-compose.yml e sua utilização com Prisma.","Caso não saiba o que é docker, e essa documentação não esteja no retype ainda, veja no gitbook antigo","É importante ressaltar que nesse passo o Docker está sendo utilizado como um 'simulador' de banco de dados PostgreSQL."]},{"i":"criando-arquivo-docker-composeyml","l":"Criando arquivo docker-compose.yml"},{"i":"adicionando-a-configuração-no-arquivo-docker-composeyml","l":"Adicionando a configuração no arquivo docker-compose.yml"},{"l":"Definir localização do seu banco de dados","p":["Considerando as variáveis usadas no docker,","POSTGRES_DB = nome do banco de dados = teste","POSTGRES_USER = usuario definido no docker-compose.yml= teste","POSTGRES_PASSWORD = senha definida no docker-compose.yml= teste","No seu arquivo de ambiente .env, declare a URL do banco de dados, substituindo os termos entre chaves, {var}, por seus respectivos valores:","Adicione o conteúdo acima ao .env.example, caso ele não já esteja lá.","Ajude o coleguinha que daqui 2 anos vai tentar rodar seu projeto."]},{"l":"Inicie o Docker"},{"l":"Inicie o container do banco de dados PostgreSQL"},{"l":"Verifique se o banco de dados está sendo executado"}],[{"i":"como-usar-prisma-orm-","l":"Como usar Prisma ORM ?"},{"i":"criando-models-prisma-cli","l":"Criando Models (Prisma CLI)","p":["O Prisma tem sua própria sintaxe para declarar o schema no banco de dados.","É interessante notar que o prisma.schema possui 3 partes:","generator: declara quais assets(artefatos/arquivos) são criados ao rodar o comando generate do prisma.","datasource: Declare qual o SGBD(Sistema de Gerenciamento de Banco de Dados) utilizado, e a url de conexão ao banco de dados do projeto.","models: Isso é a modelagem de fato do banco de dados, que vai para o schema do banco de dados do projeto;","Veja mais na documentação deles.","Atenção que ao usar autenticação por biblioteca pode ser necessário conformar as tabelas do banco de dados à biblioteca!! Por exemplo, o Next Auth requer 3 models com certos atributos para que funcione corretamente."]},{"i":"efetivando-as-alterações-no-prismaschema","l":"Efetivando as alterações no prisma.schema","p":["É possível gerar migrações em .sql- ou seja, arquivos escritos em código sql, que contém as alterações realizadas no schema.prisma(desde a última migração) e que devem ser realizadas no schema do seu banco de dados -, ou simplesmente forçar o schema do banco de dados a atualizar. Em desenvolvimento, o recomendado é forçar a atualização, e simplesmente rodar o seguinte comando:","Não","O Prisma também permite gerar migrações em sql(útil em ambiente de produção). Em ambiente de desenvolvimento, usar db push para forçar a mudança no banco de dados facilita nossa vida.","As migrações em sql dão maior liberdade para escrever scripts na migração."]},{"l":"Mais sobre","p":["Documentação Criação de Models","Documentação Relacionamento entre Models"]},{"l":"CRUD","p":["CRUD é uma acrônimo para as quatro maneiras básicas de se operar com informações armazenadas em uma aplicação. Estas operações são: Create, Read, Update e Delete.","Então, a seguir seguem formas de construirmos um CRUD utiilizando o Prisma, para interação com as instâncias do nosso banco de dados.","Verifique que já criou uma instância do prisma client.","Neste exemplo, estamos rodando os arquivos com ts-node, que transpila o TypeScript e roda o JavaScript resultante com Node. A ideia é a mesma usando api em Express, NextJS, etc."]},{"l":"Create","p":["Criar um arquivo TypeScript","Modificar o arquivo typescript","Executar arquivo typescript","Não"]},{"i":"read-index","l":"Read (Index)","p":["Criar um arquivo TypeScript","Modificar o arquivo typescript","Executar arquivo typescript","Não"]},{"i":"read-show","l":"Read (Show)","p":["Criar um arquivo TypeScript","Modificar o arquivo typescript","Executar arquivo typescript","Não"]},{"l":"Update","p":["Criar um arquivo TypeScript","Modificar o arquivo typescript","Executar arquivo typescript","Não"]},{"l":"Delete","p":["Criar um arquivo TypeScript","Modificar o arquivo typescript","Executar arquivo typescript","Não"]},{"i":"mais-sobre-1","l":"Mais sobre","p":["Documentação CRUD do Prisma"]},{"l":"Criando uma seed","p":["Vendo as operações de CRUD, é meio claro que para criarmos uma seed, basta usarmos a ideia do create.","Crie o arquivo seed.ts;","Caso não já esteja no projeto, adicione o pacote ts-node;","Não","Adicione um script ao package.json que facilitará rodar a seed:","Agora, para rodar a seed do projeto basta usar o comando:"]},{"i":"mais-detalhes-referência-da-api","l":"Mais detalhes (Referência da API)","p":["Referência da API"]}],[{"l":"O que é tRPC","p":["A denominação tRPC é uma abreviação de \"TypeScript Remote Procedure Call\", uma biblioteca do TypeScript que se insipira no RPC (Remote Procedure Call), um protocolo específico de comunicação que permite a comunicação entre um cliente e servidor em diferentes dipostivos.","Essa biblioteca trabalha com uma estrutura que facilita a visualização dos endpoints (pontos de comunicação) e a compreensão do que se passa por eles. Deste modo, temos acesso aos tipos de dados, que estão sendo comunicados, pelo lado cliente e, assim, temos um melhor monitoramento do funcionamento e de possíveis erros.","Em resumo, tRPC ajuda a tornar a comunicação entre cliente e servidor mais clara, segura e eficiente, uma vez que possibilita uma maior transparência dos dados percorridos no sistema."]}],[{"l":"Instalação","p":["O tRPC possui vários tipos de pacotes com conteúdos extras, para instalar o pacote padrão:","Deve-se certificar que a versão do TypeScript seja igual ou superior à versão 4.7.0.","É recomendado a atribuição \"strict\": true no arquivo tsconfig.json, já que não há suporte para o contrário.","npm install @trpc/server @trpc/client","yarn add @trpc/server @trpc/client","pnpm add @trpc/server @trpc/client","bun add @trpc/server @trpc/client"]},{"l":"Pacotes recomendados","p":["Para projetos em Next.js é recomendado a instalação de uma versão que é uma combinação da versão para React (React Query) com algumas ferramentas específicas a mais de integração para o Next:","npm install @trpc/server @trpc/client @trpc/react-query @trpc/next @tanstack/react-query zod","yarn add @trpc/server @trpc/client @trpc/react-query @trpc/next @tanstack/react-query zod","pnpm add @trpc/server @trpc/client @trpc/react-query @trpc/next @tanstack/react-query zod","bun add @trpc/server @trpc/client @trpc/react-query @trpc/next @tanstack/react-query zod","Para projetos somente em React, basta o mesmo procedimento anterior, agora sem o parâmetro @trpc/next e zod(caso não use zod em React)"]}],[{"l":"Prática","p":["tRPC é uma ferramenta para comunicação entre back-end e front-end, então começaremos definindo rotas no back:"]},{"l":"Iniciando o tRPC no back-end","p":["A primeira tarefa a ser feita é iniciar o tRPC no back-end. O tRPC funciona através de chamadas de funções de um lado da aplicação para outro e, para termos acesso às propriedades e aos métodos dessa ferramenta, precisamos inicializar uma instância de roteador.","Assim, criaremos um arquivo trpc.ts onde inicializaremos o tRPC por meio de uma const t(nome usado somente para exemplo) e exportaremos as propriedades router e procedure da instância."]},{"i":"por-que-exportar","l":"Por que exportar?","p":["Exportamos duas propriedades que definimos no arquivo trpc.ts para facilitar o uso delas em quaisquer outros arquivos e alguma possível manutenção dessa aplicação, pois precisaremos fazer alterações no \"arquivo fonte\" e não em todos os lugares onde as usarmos."]},{"l":"Uso das propriedades","p":["Para o lado cliente poder se comunicar com o servidor é preciso definir \"rotas de comunicação\", pois é por meio das rotas que o servidor é direcionado ao procedimento/protocolo específico, definidas usando o router.","Em seguida, a rota levará a um procedimento ( procedure) no qual é passado uma função que pode chamar determinadas funções do banco de dados e/ou efetuar outras ações. Logo, também precisamos usar a propriedade procedure para definirmos o que deve ser feito e as funções a serem chamadas em uma determinada rota.","No caso, procedures está definido como publicProcedure pois, no exemplo, definiremos requisições que não exigirão autenticação."]},{"l":"Definindo as rotas","p":["Então, importamos em outro arquivo, mais por questão de organização, as propriedades router e publicProcedure e definimos um conjunto de rotas em uma const appRouter. Também deve-se importar o banco de dados feito em sua aplicação, pois nas rotas serão definidas requisições para o mesmo.","Para fazer as definições, é usado um objeto/dicionário onde as chaves serão os nomes das rotas e os valores serão as ações efetuadas no momento em que elas forem chamadas pelo lado cliente.","Usamos o publicProcedure, que definirmos anteriormente, para efetuar requisições/procedimento ao servidor. Um procedimento pode ser:","query busca de informação","mutation criação, atualização ou delete de informação","subscription cria uma ligação persistente com o servidor e recebe mudanças. É o famoso websocket.","No caso, estamos definindo uma requisição userList que irá listar todos os usuários de um servidor, logo usamos query."]},{"l":"Entrada de Dados","p":["Para receber entrada de informações do lado cliente, basta usar o input() que irá receber informações e as retornará para o query() podendo ser, primeiramente, validadas, caso efetuado um tratamento de dados. Usamos o pacote \"zod\" para fazer a validação da entrada de dados. Os campos nos quais deseja fazer alguma validação coloque z.tipoDeDadoDesejado(), exemplo:","O query() recebe um objeto com várias informações como dados de contexto, de usuário, log-In etc. Portanto, para isolarmos os dados de entrada/input usamos o {input} que irá desestruturar o objeto e pegar somente os dados que queremos para fazermos as requisições.","É possível passar um objeto com alguns parâmetros de mensagens personalizadas, por exemplo:","Para mais informações sobre o a validação de dados, clique aqui"]},{"l":"Servidor","p":["O servidor é o que irá ouvir as requisições e, de acordo com as rotas definidas, dar uma determinada resposta. Porém, ainda não iniciamos nenhum servidor, logo, a seguinte etapa será iniciar um. É importado o método createHTPPServer do próprio tRPC, que irá criar o servidor, sendo necessário passar um roteador para o mesmo saber como reagir às requisições. Também usado o método listen, que define o endereço em que o servidor receberá requisições."]},{"l":"Configurando servidor no lado cliente"},{"l":"Definindo a conexão entre servidor e cliente","p":["Da mesma forma que é necessário criar um servidor para conseguir estabelecer uma comunicação com o cliente, é necessário haver no lado cliente uma maneira de se comunicar com o servidor, uma maneira por onde mandar suas requisições.","O lado cliente fica ciente das informações que estão sendo manipuladas por meio dos tipos de dados do roteador. Logo, para estabelecer essa conexão primeiro temos que exportar o tipo do nosso roteador adicionando o seguinte trecho no arquivo /server/index.ts:","Então, o AppRouter é importado e passado ao método createTRPCProxyclient para a criação do proxy. Como é um argumento de tipo, ou seja, são passados os tipos de dados em que a função tem que trabalhar, ele é declarado entre os símbolos <>, uma característica do TypeScript.","Assim, também iremos definir um httpBatchLink que é um tipo de link que lida com requisições em lote como se fosse uma, declarando o endereço do nosso servidor para efetuarmos as nossas requisições e de forma mais otimizada:","Com o proxy trpc, exportamos para facilitar o reuso em outros arquivos ou podemos manipulá-lo no mesmo."]},{"l":"Fazendo requisições no lado cliente","p":["Com o proxy definido e exportado, podemos importar o proxy trpc para qualquer arquivo e fazermos requisições através dele, no exemplo usaremos no mesmo arquivo:","Como estabelecemos uma conexão cliente-servidor dos tipos de dados e definimos o endereço do servidor, temos acesso às rotas definidadas no back-end e podemos efetuar as requisições.","Neste exemplo usamos a rota definida anteriormente userById para efetuarmos a requisição ao servidor, que irá responder com informações de um usuário filtrado pelo seu ID. Também usamos a rota userCreate que cria um usuário com nome."]},{"i":"#","p":["Para mais informações sobre tRPC, consulte aqui"]}],[{"l":"Configurando o Ambiente"},{"i":"por-que-usar-typescript","l":"Por que usar TypeScript?","p":["Se você já programou em JavaScript, torna-se ainda mais fácil programar em TypeScript, afinal eles são basicamente \"a mesma coisa\". O que isso quer dizer? É que o TypeScript é na verdade um superset open-source, desenvolvido pela Microsoft, ou seja, uma extensão da linguagem JavaScript, com a adição de algumas propriedades que melhoram o nosso código.","Tá, mas ainda não chegamos no tópico principal desta introdução né... por que usar o TypeScript? Para começar, ele funciona como uma ferramenta que adiciona tipagem estática ao JavaScript, que pode ser escrita em qualquer ambiente de desenvolvimento e que, quando instalada via gerenciador de pacotes JS, permite checar erros e utilizar outros compiladores que suportam este mecanismo. Com isso, o TypeScript eleva o nível de produtividade e ainda garante o desenvolvimento de aplicações complexas, eficazes e seguras, onde, por meio da verificação de tipos, é possível mais facilmente verificar se cada função, objeto ou elemento do seu código está sendo utilizado e gerenciado da forma que você espera, facilitando também a manutenção e modificação do código.","Além do potencial de detecção de erros durante o desenvolvimento de projetos, outra vantagem é a possibilidade de incluir a IntelliSense da IDE que está sendo usada. Isso reflete num ambiente muito mais ágil e seguro enquanto o código está sendo digitado pelo desenvolvedor."]},{"l":"Verificador de Tipos Estáticos","p":["Detecção de erros sem execução do código é chamada de verificação estática, e determinar o que é um erro e o que não é, baseado nos tipos dos valores sendo operados é chamado de verificação de tipos. TypeScript verifica um programa por erros antes de sua execução e faz isso baseado nos tipos dos valores, ou seja, é um verificador de tipos estático. Ele adiciona regras de tipagem e regras sobre como diferentes tipos de valores podem ser usados.","Além do mais, a grosso modo, uma vez que o compilador do TypeScript terminou de verificar o seu código, ele apaga os tipos para produzir o código resultante \"compilado\". Isso significa que uma vez que seu código for compilado, o código JS puro de resultado não tem informação de tipo, ou seja, o TypeScript nunca muda o comportamento do seu programa baseado nos tipos que infere.","Para treinar e exercitar nossa escrita de código, o TypeScript tem um playground online."]},{"l":"Instalação e uso","p":["Geralmente, na criação do seu projeto, seja em Vite ou seja em Next, é possível especificar se deseja utilizar como linguagem o JavaScript ou o TypeScript, e, assim, toda mágica de instalação do superset já é feita para nós. Porém, também é possível adicionar o TypeScript manualmente no seu projeto, e o processo para isso é bastante simples:","Os passos a seguir servem apenas para exemplificação de como o TypeScript surge e opera no nosso diretório. É altamente recomendável que você escolha a utilização da linguagem TypeScript, quando nas opções de criação do seu projeto.","Primeiramente, para adicionar o TypeScript nas dependências do projeto, basta executar um dos seguintes comandos no terminal, de acordo com o gerenciador de pacotes que você e sua equipe estejam utilizando:","Porém, ainda precisamos explicitar que desejamos configurar a ferramenta, e para isso precisamos do arquivo tsconfig.json, onde iremos ajustar o modo de operação do TypeScript sobre o nosso projeto.","Para a criação do arquivo, basta rodar o seguinte comando no terminal:","Com isso, um arquivo tsconfig.json totalmente \"cru\" irá ser criado na raiz do seu diretório, com as explicações de todas as possíveis configurações que você pode aplicar no compilador do TypeScript. Necessitando, assim, que você edite completamente o arquivo para obter aquilo que deseja no seu projeto.","Entretanto, o Vite e o Next são capazes de já realizarem uma configuração básica por padrão. Seguem exemplos de como essas ferramentas implementam a configuração do TypeScript para o seu projeto."]},{"l":"Vite","p":["tsconfig.json:","tsconfig.node.json:"]},{"l":"Next","p":["tsconfig.json:"]},{"i":"opções-do-tsconfigjson","l":"Opções do tsconfig.json","p":["Já sabemos agora como o TypeScript entra no nosso projeto e onde conseguimos configurar seu compilador e seu modo de operação. Porém... como configurar?? Este texto irá mostrar algumas opções relevantes de se saber na hora de mexer no seu tsconfig.json.","Não é recomendável que você fique demasiadamente editando estes arquivos de configuração. O ideal é que você faça isso no início do projeto, e que realize, apenas se necessário, alterações pontuais no decorrer do desenvolvimento, avisando à equipe ou ao gerente do projeto as alterações realizadas.","Primeiramente, o arquivo é constituído por um objeto, no qual colocamos nossas possíveis configurações, como: compilerOptions, include, exclude, extends, etc.","Estrutura básica de um arquivo tsconfig.json:"]},{"l":"Falando de compilerOptions","p":["Este será um objeto no qual você poderá descrever como o compilador deve funcionar, de acordo com diversas opções de configuração que ele suporta. Entre estas opções, vale-se citar:"]},{"l":"target","p":["Recebe uma string e especifica a versão do JavaScript para a qual o superset irá ser compilado. Valores válidos: \"es2016\", \"es2020\", \"es5\"."]},{"l":"module","p":["Recebe uma string e especifica qual módulo de código será gerado. Valores válidos: \"esnext\", \"commonjs\"."]},{"l":"jsx","p":["Recebe uma string e especifica qual código JSX será gerado. Valores válidos: \"preserve\", \"react-jsx\"."]},{"l":"strict","p":["Recebe um boolean e, quando igual a true, habilita todas as rigorosas verificações de tipo para o seu código, como: noImplicityAny, strictNullChecks, strictFunctionTypes, noUnusedParameters, noImplicitReturns, etc.","Caso você queira aprender mais opções de configuração do TypeScript, é possível ir à própria documentação do superset, onde você irá encontrar em detalhes explicações e exemplos de cada opção de configuração."]}],[{"l":"Entendendo a Linguagem"},{"l":"Definindo Tipos","p":["Em TypeScript, dois pontos depois de um nome de variável inicia uma anotação de tipo, e a assinatura de tipo depois dos dois pontos descreve os valores que a variável pode ter. Por exemplo, a linha a seguir informa ao TypeScript que variavel sempre armazenará números:","Você pode se perguntar se a inicialização de undefined de variavel não viola o tipo estático. O TypeScript contorna esse problema não permitindo que você leia variavel antes de atribuir um valor a ele."]},{"l":"Tipos por Inferência","p":["TypeScript conhece a linguagem JavaScript e vai gerar tipos para você em muitos casos, inferindo por meio da atribuição de valores, quando na declaração do que está sendo atribuído. Ficou muito confuso? Por exemplo, quando criamos uma variável e atribuímos a ela um determinado valor, como uma string, TypeScript usará o valor como seu tipo, ou seja, esta varíavel estará automaticamente tipada para aguardar uma string, sem a necessidade de explicitar isso."]},{"i":"como-descrever-tipos","l":"Como descrever tipos?","p":["O que vem depois dos dois pontos de uma anotação de tipo pode variar de simples a expressões complexas, e agora estudaremos todas essas assinaturas e como essas expressões podem ser criadas."]},{"l":"Tipos básicos","p":["Tipos estáticos primitivos do JavaScript: undefined, null, boolean, number, string, symbol, object.","Tipos específicos do TypeScript: any(o tipo de todos os valores), unknown(o tipo de um valor desconhecido), etc.","Obs.: Tenha cuidado ao utilizar o tipo unknown. Tenha certeza do que está fazendo."]},{"l":"União de tipos","p":["Com TypeScript, você pode criar tipos complexos combinando os simples. Com uma união, você pode declarar que um tipo pode ser um de muitos. Para isso, basta combinar os tipos que deseja com o operador |.","O código acima é compilado adequadamente, pois você explicitamente declarou que variavel pode assumir tanto um valor numérico quanto null."]},{"l":"Tipos em Array","p":["Os arrays serão definidos aqui das duas formas seguintes (e às vezes uma mistura dos dois):","Lists: Todos os elementos têm o mesmo tipo e o comprimento do array pode variar. Tuple: Os elementos não têm necessariamente o mesmo tipo, porém o comprimento do array é fixo.","Existem duas maneiras de descrever um array como uma lista:","No exemplo acima, tanto arr1 quanto arr2 são tipados como arrays de tamanho variável, cujos elementos são todos valores numéricos.","Suponha que você deseja agora armazenar um par de chave e valor, resultado da operação Object.entries(obj), e você espera que obj é um objeto cujas chaves são strings e os valores são números.","No exemplo acima, descrevemos primeiroParChaveValor como um array de tamanho definido de 2 elementos, onde o primeiro deve ser uma string e o segundo deve ser um valor numérico."]},{"l":"Tipos em funções","p":["Ao descrever tipos para funções, estaremos descrevendo tanto os tipos dos parâmetros que a função aguarda, quanto também o tipo do seu retorno. O exemplo abaixo é uma anotação de tipo para todas as funções que aguardam um único parâmetro, sendo ele um número, e retornam um booleano:","O código a seguir é um exemplo mais realista:","Outra forma de descrever a função acima é descrever separadamente os tipos do parâmetro da função e de seu retorno:","Obs.: se excluirmos o boolean na declaração da função acima, o TypeScript é inteligente o suficiente para inferir o tipo do retorno, a partir do escopo da função.","Porém, e se minha função não retornar nada? Terei que forçar um retorno que não desejo, só para poder tipar a função?? Não! Para começar, funções que \"não retornam nada\" no JavaScript estão na verdade retornando undefined implicitamente, e um dos tipos muito úteis que o TypeScript nos fornece é o void, o qual diz que a função sempre retorna undefined, explícito ou implicitamente."]},{"l":"Tipos em objetos","p":["Para tipar objetos, iremos aqui definir uma quantidade fixa de propriedades, conhecidas no momento do desenvolvimento, e cada propriedade pode ter um tipo diferente.","Por exemplo, para criar um objeto com um tipo definido por incluir nome: string e id: number, faremos as seguintes descrição e declaração:"]},{"l":"Criando tipos Personalizados","p":["Suponha que tenhamos no nosso código diversas variáveis que utilizam a mesma notação de tipo. Se formos reescrever a notação toda vez que declararmos mais uma variável, a escrita do código não seria nada prática e produtiva para o nosso desenvolvimento. Porém, o TypeScript nos fornece poderosas abstrações para reutilização de tipos: interface(para denotar tipos de objetos ou classes) e type(para denotar qualquer tipo).","Essa alteração permite que o tipo Ponto seja usado em vários locais dentro do código sem precisar redefinir os detalhes do tipo repetidas vezes.","E ainda não acabou, o TypeScript também nos permite estender types ou interfaces, para compor tipos mais complexos a partir de tipos simples:","No exemplo acima, o tipo Ponto3d resultante consistiria nas propriedades x e y do type ou da interface Ponto, além da nova propriedade z."]},{"l":"type alias x interface","p":["Embora type e interface pareçam similar em uma primeira olhada superficial, há na verdade muitas diferenças entre eles.","Portanto, vamos examinar as principais características de cada uma dessas duas ferramentas e comparar suas utilizações.","As interfaces possibilitam o que chamamos de declaration merging: quando duas interfaces são declaradas com o mesmo nome, ocorre uma mescla e junção dessas duas. Está é uma maneira de extender uma interface, porém de forma menos explícita, o que não é uma prática recomendável quando no desenvolvimento de determinados projetos.","Interfaces são ótimas para definir a estrutura de objetos ou classes, e elas são ideais para desenvolver um projeto aberto para implementações e extensões de comportamento, como para o desenvolvimento de bibliotecas e frameworks.","Permitindo criar \"aliases\" - ou seja, apelidos - para tipos primitivos, funções, objetos e uniões ou composições destes tipos básicos, type é uma ferramenta poderosa para expandir a tipagem do seu projeto a um nível muito avançado.","Ele permite você denotar diversos tipos e realizar uniões e interseções deles:"]},{"l":"Parâmetros opcionais","p":["Se, na estrutura da sua anotação de tipo, uma propriedade pode ser omitida, você pode colocar um ponto de interrogação após o seu nome:","Aqui, ao invés de especificar um tipo separado para um ponto tridimensional, simplesmente tornamos a propriedade z opcional."]},{"l":"Sistemas de Tipos Estruturais","p":["Quando o TypeScript compara dois tipos de objetos diferentes, para decidir se eles correspondem ou não, isso é feito estruturalmente. Isso significa que, ao invés de comparar os tipos, verificando se os dois herdam o mesmo objeto de restrição (como instanceof), as propriedades de cada objeto são comparadas."]}],[{"i":"como-utilizar-typescript-com-react","l":"Como utilizar TypeScript com React?"},{"l":"De .jsx para .tsx","p":["TypeScript é uma extensão da linguagem JavaScript. Em suma, ele traz definições de tipos para o seu código, a fim de se evitar alguns tipos de bugs e diversas depurações relacionadas tanto com a passagem de parâmetros quanto com a validação de que objetos, estados e variáveis irão se comportar como você espera.","Vale reiterar que o TypeScript não é uma nova linguagem. No final, todo seu código irá ser compilado (convertido) em JavaScript, para poder ser interpretado."]},{"i":"pacote-typesreact","l":"Pacote @types/react","p":["O pacote @types/react inclui diversos tipos para o nosso código de React, nos possibilitando prover tipagens para hooks built-in, eventos e diversos elementos. Assim, você pode usá-los sem precisar realizar nenhuma configuração adicional no seu repositório e no seu código."]},{"l":"Tipando props","p":["Escrever código TypeScript com React é bem semelhante a escrever código JavaScript com React. Uma das principais diferenças está no fato de que, quando trabalhando com um componente em TypeScript, você terá que declarar e prover tipos para as props dos seus componentes.","JavaScript","TypeScript","No exemplo acima, provemos, de forma inline, um tipo para o content do button. Entretanto, podemos separar isso da declaração do componente. A seguinte sintaxe é uma forma simples e básica de prover tipos para o seu componente React, sem ser de forma inline, o que nos possibilitará reutilizar e expandir tipagens."]},{"i":"componentes-reactnode-reactelement-htmlelement","l":"Componentes (ReactNode, ReactElement, HTMLElement)","p":["No @types/react, existem diversos tipos para componentes e marcação do nosso código jsx, o que pode acabar confundindo quem está vendo TypeScript pela primeira vez. Portanto, vamos nos focar nos tipos básicos, que podemos usar para a maioria das situações, como para passagem de componentes em props e para a tipagem de children's.","Tipando componentes:","PropsWithChildren","Com o PropsWithChildren, você consegue, de forma simples, tipar props para um componente, definindo automaticamente o children para ser capaz de receber tudo aquilo que ele pode receber ( elementos JSX, string e number).","Agora, suponha que estejamos criando um componente e ele possui, além de um children que pode agir como trigger, um conteúdo para o preencher, que pode ser tanto uma string quanto um outro componente. Bom, poderíamos pensar em passar dois children's né?! Mas, como iríamos diferir o que é trigger e o que é content?? Assim, o PropsWithChildren não será o suficiente para nos satisfazer nessa situação.","Seguem abaixo alguns exemplos de como podemos lidar com isso:","ReactNode","Uma primeira possibilidade é usar o tipo ReactNode, o qual é uma união de todos elementos JSX e tipos primitivos do JavaScript como string e number.","ReactElement","Uma segunda possibilidade, menos abrangente, é utilizar o ReactElement, o qual abrange apenas elementos JSX, excluindo tipos primitivos do JavaScript como string e number.","HTMLElement","Mais uma possibilidade, ainda menos abrangente, é utilizar o HTMLElement, o qual abrange apenas marcações do HTML, excluindo componentes React e tipos primitivos do JavaScript."]},{"l":"Props de estilização","p":["Quando usando estilização inline no React, você pode usar o tipo CSSProperties, para descrever um objeto passado para a prop style de um componente. Este tipo é uma união de todas as possíveis propriedades CSS, e é uma ótima maneira de garantir que você está passando propriedades CSS válidas."]},{"l":"Hooks nativos","p":["useState","O hook useState é capaz de realizar inferência de tipos, a partir do valor inicial passado na declaração do estado.","No código acima, será inferido que state é uma string e que setState é uma função que aguarda uma string ou uma função que retorna uma string.","Uma forma mais inteligente de tipar seus estados é realizando a declaração de tipos na chamada do useState, como no código abaixo:","useContext","A tipagem, quando no uso do useContext, ocorre na criação do contexto, por meio da chamada do createContext.","Assim como no useState, é possível a inferência de tipos, de acordo com o valor default passado dentro do createContext; porém, para casos mais complexos, recomenda-se realizar uma tipagem de forma mais inteligente, como no exemplo abaixo:"]},{"l":"Eventos","p":["Quando se trabalha com eventos DOM no React, o tipo do evento é possível de ser inferido pelo event handler, ou seja, pelo onChange, onSubmit, onClick do seu elemento React. Entretanto, quando quando você quer criar uma função a ser passada para o event handler, você então precisa explicitamente definir o tipo do evento.","O pacote @types/react fornece uma lista muito ampla de tipos que você usar para manipular eventos no seu código. Eles usam uma sintaxe semelhante, baseada em FenomenoEventElemento, onde Elemento é o tipo do elemento do qual o evento é gerado. Seguem alguns exemplos:","Para onChange de um input, use ChangeEvent","Para onSubmit de um form, use FormEvent","Demais exemplos","Há mais alguns eventos que vocês podem olhar: FocusEvent, InvalidEvent, KeyboardEvent, MouseEvent, TouchEvent, TransitionEvent, ...","Por fim, se você precisar usar algum evento que não está incluído nessa lista, você pode usar o tipo SyntheticEvent, que é o tipo do qual é extendido todos os outros tipos de evento."]}],[{"i":"o-que-é-git-","l":"O que é Git ?","p":["O Git é um sistema de controle de versão usado para rastrear e gerenciar as mudanças em arquivos de um projeto. Ele permite que várias pessoas trabalhem juntas em um mesmo projeto, registrando todas as alterações feitas ao longo do tempo. Com o Git, é possível voltar a versões anteriores, colaborar com outros desenvolvedores e manter um histórico completo das modificações. É uma ferramenta essencial para o desenvolvimento de software."]}],[{"i":"o-que-é-github-","l":"O que é GitHub ?","p":["O GitHub é uma plataforma online que utiliza o sistema de controle de versão Git para hospedar projetos de desenvolvimento de software. Ele oferece um ambiente colaborativo onde os desenvolvedores podem compartilhar, colaborar e controlar as versões de seu código-fonte. O GitHub permite que os projetos sejam acessíveis a qualquer pessoa, promovendo a transparência e a participação da comunidade. Além disso, o GitHub também oferece recursos para gerenciamento de problemas, solicitações de alteração, documentação e integração contínua, facilitando o processo de desenvolvimento colaborativo e garantindo uma melhor organização dos projetos."]}],[{"i":"qual-a-diferença-entre-git-e-github-","l":"Qual a diferença entre Git e GitHub ?","p":["O Git é uma ferramenta de controle de versão local que permite rastrear e gerenciar alterações em arquivos. Ele funciona no seu computador e registra as versões do seu código.Por outro lado, o GitHub é uma plataforma online baseada no Git. Ele permite que você armazene e compartilhe seus projetos Git de forma remota, ou seja , o Git é a tecnologia subjacente que permite o controle de versão, enquanto o GitHub é um serviço online que utiliza o Git para hospedar e aprimorar a colaboração em projetos de desenvolvimento de software."]}],[{"i":"como-instalar-o-git-","l":"Como instalar o Git ?"},{"l":"Windows","p":["Acesse o site oficial do Git e clique no botão de download para Windows;","Aguarde o arquivo de instalação ser baixado e execute-o;","Siga as instruções do assistente de instalação, aceitando as configurações padrão, a menos que você queira personalizá-las;","Selecione o editor de texto padrão que você deseja associar ao Git (recomenda-se usar o editor padrão sugerido);","Na etapa de \"Seleção de Componentes\", verifique se todas as opções estão selecionadas e clique em \"Avançar\";","Selecione \"Git from the command line and also from 3rd-party software\" para habilitar o uso do Git a partir da linha de comando;","Escolha o mecanismo de conversão de fim de linha (recomenda-se a opção padrão);","Marque a opção \"Use OpenSSL\" para garantir uma conexão segura;","Selecione o terminal padrão que você deseja usar com o Git (recomenda-se usar o Git Bash);","Conclua a instalação clicando em \"Avançar\" e, em seguida, em \"Concluir\";"]},{"l":"MacOS","p":["Existem várias opções para instalar o Git no macOS, porém iremos utilizar como base a domentação oficial do git que utiliza o Homebrew, um gerenciador de pacotes, para instalar o Git.","Abra o Terminal(Digite \"Terminal\" na barra de pesquisa e abre o aplicativo que aparecer)","Se você ainda não possui o Homebrew instalado, execute o seguinte comando no Terminal:","Depois que o Homebrew estiver instalado, execute o seguinte comando para instalar o Git:","Aguarde até que a instalação seja concluída."]},{"l":"Linux","p":["O Git já vem instalado com a maioria das distribuições do Linux, porém se o git não estiver instalado, você pode instalar o Git usando o gerenciador de pacotes padrão da sua distribuição.Além disso, é importante ressaltar que distribuições diferentes tem comandos diferentes para instalação, logo caso sua distribuição no seja ubuntu, olhe a documentação oficial para mais instruções.","Abra o Terminal.","No Ubuntu e em distribuições baseadas no Debian, execute o seguinte comando:","Aguarde até que a instalação seja concluída."]},{"i":"como-verificar-se-o-git-esta-instalado","l":"Como verificar se o Git esta instalado?","p":["Após concluir a instalação no seu respectivo sistema operacional, você pode verificar se o Git está corretamente instalado digitando o comando abaixo no terminal, o qual devera retornar a versão do git instalada."]},{"i":"tem-mais-alguma-coisa-para-fazer","l":"Tem mais alguma coisa para fazer?","p":["Após concluir a instalação do Git e verificar se ele esta instalado, siga os proximos passos para fazer configuração inicial do Git.","Abra seu terminal;","Execute os seguintes comando, para salvar seu usuario e email do GitHub:"]},{"i":"quer-saber-mais-sobre-git-","l":"Quer saber mais sobre Git ?","p":["-------------------> Documentação oficial do Git<--------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Git Init","p":["O comando git init é usado para inicializar um repositório Git em um diretório específico. Quando você executa o git init em um diretório vazio ou existente, ele cria um novo repositório Git local nesse local.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git init:","Criação do repositório: O comando git init cria uma pasta oculta chamada \".git\" no diretório atual. Essa estrutura é onde o Git armazenará todas as informações relacionadas ao controle de versão( evitar mexer na pasta a não ser que seja necessario ou que voce saiba o que esta fazendo).","Pronto para versionamento: Após a execução bem-sucedida do comando git init, o diretório atual está pronto para o versionamento. Agora você pode começar a adicionar arquivos ao repositório, realizar commits para registrar as alterações e usar outros comandos do Git para gerenciar o histórico e colaborar com outras pessoas.","É importante lembrar que o git init cria apenas um REPOSITÓRIO LOCAL. Se você deseja compartilhar seu repositório com outras pessoas ou colaborar em um projeto, você pode usar serviços de hospedagem em varias plataformas online (GitHub, GitLab, Bitbucket e etc), porém na Struct a platarforma principal e o GitHub para criar um REPOSITÓRIO REMOTO onde outros desenvolvedores possam contribuir."]},{"l":"Git Remote","p":["O comando git remote é usado para visualizar, adicionar ou remover repositórios remotos em seu repositório local. Os repositórios remotos são os locais onde você envia ou recebe as alterações do seu código.","Aqui está uma explicação passo a passo do que você pode fazer com o comando git remote:","Visualizar repositórios remotos: Quando você executa git remote, ele lista os repositórios remotos atualmente configurados para o seu repositório local. Por padrão, o repositório remoto principal é chamado de origin, que é usado para enviar e receber alterações.","Adicionar repositórios remotos: Você pode usar o comando git remote add link_do_repositorio para adicionar um novo repositório remoto ao seu repositório local. Isso é útil quando você deseja colaborar em um projeto hospedado em um serviço de hospedagem Git, como o GitHub, o GitLab ou o Bitbucket.","Remover repositórios remotos: Com o comando git remote remove nome_do_repositorio, você pode remover um repositório remoto existente do seu repositório local. Isso é útil se você não deseja mais colaborar com um determinado repositório remoto."]},{"l":"Git Status","p":["O comando git status é útil para entender o estado do seu repositório e tomar decisões sobre quais ações devem ser tomadas em relação aos arquivos modificados. Ele ajuda a garantir que você esteja ciente de todas as mudanças antes de realizar um commit ou realizar outras operações no Git.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git status:","Status do branch: O git status mostrará em qual branch você está trabalhando no momento. Será exibido o nome da branch atual.","Ramificações: O comando irá informar se há commits na branch atual que ainda não foram enviados para o BRANCH REMOTO correspondente (se você estiver trabalhando com um REPOSITÓRIO REMOTO).","Mudanças não rastreadas: Se houver arquivos no seu diretório de trabalho que ainda não foram adicionados ao controle de versão do Git, o git status os listará como \"untracked\" (não rastreados). Isso significa que o Git não está acompanhando esses arquivos.","Mudanças a serem confirmadas: O git status mostrará os arquivos modificados que já estão sob o controle do Git. Essas alterações estão prontas para serem adicionadas ao próximo commit.","Mudanças confirmadas: Se você já fez um commit, o git status informará que o diretório de trabalho está limpo, ou seja, não há alterações pendentes.","Sugestões de próximos passos: O git status também pode fornecer sugestões sobre o que fazer em seguida, com base no estado atual do repositório. Por exemplo, pode sugerir comandos como git add para adicionar arquivos ao commit ou git branch para listar as ramificações disponíveis."]},{"l":"Git Add","p":["O comando git add é usado para adicionar arquivos ao índice (também conhecido como área de stage) do Git. Ele prepara os arquivos para serem incluídos no próximo commit.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git add:","Adicionando arquivos ao índice: O git add permite que você especifique um ou mais arquivos que deseja adicionar ao índice. Por exemplo, você pode usar git add nome_arquivo para adicionar um arquivo específico ou git add . para adicionar TODOS os arquivos modificados no diretório atual.","Preparação para o próximo commit: Ao adicionar os arquivos ao índice, você está preparando-os para serem incluídos no próximo commit. O índice é uma área intermediária entre o diretório de trabalho (onde você edita os arquivos) e o repositório Git (onde os commits são registrados).","Rastreamento de alterações: Quando você adiciona um arquivo ao índice, o Git começa a rastrear as alterações feitas nele. Isso significa que o Git será capaz de registrar essas alterações no próximo commit.","Preparando um commit parcial: O git add também pode ser usado para criar commits parciais, selecionando apenas partes específicas de um arquivo para serem adicionadas ao índice. Isso é útil quando você fez várias alterações em um arquivo, mas deseja commitar apenas algumas delas.","Verificação do status: Após executar git add, você pode usar o comando git status para verificar o status do repositório e ver quais arquivos foram adicionados ao índice.","Lembrando que o git add não realiza um commit imediato, apenas prepara os arquivos para serem incluídos no próximo commit. Para registrar as alterações no repositório, você ainda precisa executar o comando git commit posteriormente."]},{"l":"Git Commit","p":["O comando git commit é usado para criar um novo commit no repositório Git. Um commit é uma confirmação das alterações feitas em um conjunto de arquivos, representando um ponto específico no histórico do projeto.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git commit:","Preparando o commit: Antes de executar o comando git commit, é importante ter usado o comando git add para adicionar os arquivos desejados ao índice (área de stage). Esses arquivos são preparados para fazer parte do commit.","Abrindo o editor de mensagens: Quando você executa git commit, o Git abre um editor de texto para que você possa fornecer uma mensagem de commit. Essa mensagem descreve as alterações que estão sendo adicionadas no commit.","Escrevendo a mensagem de commit: No editor de texto, você deve escrever uma mensagem clara e concisa que descreva as alterações realizadas. A mensagem de commit é uma parte essencial do histórico do projeto e ajuda a entender o que foi alterado no commit.","Salvando o commit: Após escrever a mensagem de commit, você salva e fecha o editor de texto. Nesse momento, o Git cria um novo commit contendo todas as alterações que foram adicionadas ao índice. O commit é identificado por um hash exclusivo, que o torna único dentro do repositório.","Registrando as alterações no histórico: O commit é registrado no histórico do projeto, criando um novo ponto no histórico do desenvolvimento. Ele armazena uma versão dos arquivos e suas alterações correspondentes.","Rastreando o histórico: O Git mantém um histórico completo dos commits, permitindo que você navegue entre diferentes versões dos arquivos e reverta alterações, se necessário.","O comando git commit pode ser utilizado da seguinte forma git commit -m frase_sobre_o_que_fez_no_commit, a fim de simplificar o processo de abrir um editor de texto e aumentar a praticidade no versionamento."]},{"l":"Git Push","p":["O comando git push é usado para enviar as alterações locais do seu repositório Git para um repositório remoto. Ele atualiza o branch remoto com os commits feitos localmente.","Aqui está uma explicação passo a passo do que acontece quando você executa o comando git push:","Identificando o repositório remoto: Antes de usar o git push, você precisa configurar um repositório remoto usando o comando git remote add link_repositorio. Isso define um nome para o repositório remoto, geralmente chamado de origin, que é usado como referência para o push.","Verificando o branch atual: O git push envia as alterações do branch atual para o branch correspondente no repositório remoto. É importante garantir que você esteja no branch correto antes de executar o push.","Autenticação e conexão: O Git irá autenticar você com o repositório remoto, solicitando suas credenciais, caso necessário. Ele também estabelecerá uma conexão segura com o repositório remoto.","Enviando os commits: Quando você executa git push, o Git enviará os commits locais que não estão presentes no repositório remoto. Esses commits incluem as alterações que você fez e registrou localmente usando o git commit.","Atualizando o branch remoto: O repositório remoto receberá os commits enviados e atualizará o branch correspondente. Se não houver conflitos, o branch remoto será atualizado com as alterações do branch local.","Confirmação do push: Após a conclusão do git push, você receberá uma confirmação de que os commits foram enviados com sucesso e o branch remoto foi atualizado."]},{"l":"Git Clone","p":["Comando git clone é usado para criar uma cópia local de um repositório remoto existente. Ele permite que você baixe todo o histórico do projeto, incluindo todos os branches e commits, para o seu ambiente de desenvolvimento local, como tambem é a maneira mais comum de iniciar o desenvolvimento em um projeto existente.","Aqui está uma explicação passo a passo do que acontece quando você executa o comando git clone:","Identificando o repositório remoto: Ao executar o comando git clone link_do_repositorio, você precisa fornecer o URL do repositório remoto que deseja clonar. O URL pode ser obtido, por exemplo, a partir da página do projeto no GitHub.","Criando uma cópia local: O git clone cria uma cópia exata do repositório remoto em seu diretório local. Ele cria um novo diretório com o nome do projeto e faz o download de todos os arquivos, commits e branches do repositório remoto.","Estabelecendo conexão: O Git estabelece uma conexão com o repositório remoto e autentica você, solicitando suas credenciais, se necessário. Isso permite que você acesse o repositório e baixe todas as informações relacionadas.","Baixando o histórico do projeto: Ao executar o git clone, o Git baixa todo o histórico do projeto, incluindo todos os commits e branches. Você terá uma cópia local completa do repositório, pronta para uso.","Configurações adicionais: Além do histórico do projeto, o git clone também pode baixar outras configurações do repositório, como hooks personalizados ou arquivos de configuração específicos."]},{"i":"quer-saber-mais-comandos-do-git-","l":"Quer saber mais comandos do Git ?","p":["-------------------> Documentação oficial do Github<--------------------"]}],[{"i":"o-que-é-npm-","l":"O que é NPM ?","p":["NPM (Node Package Manager) é um gerenciador de pacotes para o ambiente de execução JavaScript/Node.js. Ele permite que desenvolvedores instalem, compartilhem e gerenciem as dependências de um projeto de maneira eficiente. O NPM facilita a obtenção de bibliotecas e ferramentas de terceiros, simplificando o processo de desenvolvimento, pois você pode aproveitar o trabalho de outros desenvolvedores em vez de começar do zero. Além disso, o NPM também fornece recursos para ajudar na criação e publicação de seus próprios pacotes JavaScript, permitindo que outros desenvolvedores os utilizem em seus projetos. No geral, o NPM é uma ferramenta fundamental no ecossistema Node.js e JavaScript, tornando o desenvolvimento mais eficiente e colaborativo."]}],[{"i":"como-instalar-o-npm-","l":"Como instalar o NPM ?","p":["Ao instalar o Node.js por meio do NVM ou do site oficia, geralmente é incluído um pacote chamado \"Node Package Manager\" que instala o NPM juntamente com o Node.js. Portanto, na prática, a maioria das instalações do Node.js incluem o NPM por padrão, consequentemente não é necessario fazer uma instalação a parte."]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do NPM"},{"l":"Instalar um pacote"},{"l":"Remover um pacote"},{"l":"Iniciar um projeto novo"},{"l":"Atualiza os pacotes do projeto"},{"l":"Lista todas as dependências do projeto"},{"l":"Instalação limpa das dependências"},{"i":"quer-saber-mais-comandos-do-npm-","l":"Quer saber mais comandos do NPM ?","p":["-------------------> Documentação oficial do NPM.<--------------------"]}],[{"i":"o-que-é-nvm-","l":"O que é NVM ?","p":["NVM (Node Version Manager) é uma ferramenta que permite a instalação e gerenciamento de várias versões do Node.js em um único sistema. O Node.js é uma plataforma de desenvolvimento de software construída sobre o motor de JavaScript V8 do Chrome. Ele permite que você execute código JavaScript fora do navegador, o que o torna uma opção popular para criar aplicativos web do lado do servidor.O NVM foi criado para resolver um problema comum que os desenvolvedores enfrentam ao trabalhar com o Node.js: a necessidade de alternar entre diferentes versões do Node.js em um mesmo sistema."]}],[{"i":"como-instalar-o-nvm-","l":"Como instalar o NVM ?"},{"l":"Comandos para instalar o NVM","p":["Instalar o Curl","Instalar o NVM","Reinicie o terminal"]},{"i":"quer-saber-sobre-mais-sobre-nvm-","l":"Quer saber sobre mais sobre NVM ?","p":["----------------------> Repositorio NVM<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos basicos NVM"},{"i":"listar-versões-disponiveis-do-nodejs-para-instalar","l":"Listar versões disponiveis do Node.js para instalar"},{"i":"instalar-uma-versão-especifica-do-nodejs","l":"Instalar uma versão especifica do Node.js"},{"i":"mostrar-as-versões-do-nodejs-instaladas","l":"Mostrar as versões do Node.js instaladas"},{"i":"remover-uma-versão-instalada-do-nodejs","l":"Remover uma versão instalada do Node.js"},{"l":"Definir uma versão como global"},{"l":"Definir uma versão no terminal"},{"i":"quer-saber-mais-comandos-do-nvm-","l":"Quer saber mais comandos do NVM ?","p":["----------------------> repositorio NVM<-----------------------"]}],[{"i":"o-que-é-postgresql-","l":"O que é PostgreSQL ?","p":["O PostgreSQL é um sistema de gerenciamento de banco de dados relacional de código aberto. Ele é frequentemente referido como Postgres e é amplamente utilizado para armazenar e gerenciar dados estruturados. O PostgreSQL oferece recursos avançados de gerenciamento de dados, como suporte para consultas complexas, transações ACID (Atomicidade, Consistência, Isolamento e Durabilidade), integridade referencial e replicação.Uma das características distintas do PostgreSQL é a sua extensibilidade. Ele permite que os usuários criem suas próprias funções, tipos de dados personalizados e até mesmo estendam a linguagem SQL para atender às necessidades específicas da aplicação."]}],[{"i":"como-instalar-o-postgresql-","l":"Como instalar o PostgreSQL ?"},{"l":"Comandos para instalar o PostgreSQL","p":["Crie a configuração do repositório de arquivos","Instale o pacote PostgresSQL","Atualize as listas de pacotes","Instale a versão mais recente do PostgreSQL","Verifique se a instalação deu certo"]},{"i":"quer-saber-sobre-mais-sobre-postgresql-","l":"Quer saber sobre mais sobre PostgreSQL ?","p":["----------------------> Documentação oficial PostgreSQL<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do PostgreSQL"},{"l":"iniciar servidor"},{"l":"verificar status do servidor"},{"l":"parar servidor"},{"l":"executar utilitário psql"}],[{"i":"o-que-é-wsl-","l":"O que é WSL ?","p":["O Subsistema do Windows para Linux, tambem conhecido como WSL, é uma excelente ferramenta para usuarios de Windows que desejam utilizar o Linux, visto que esse sistema operacional é atrativo para programadores, devido as facilidades e praticidades que ele proporciona com relação ao Windows. Além disso, essa ferramenta é uma das melhores formas de usar dois sistemas operacionais concomitantemente, tendo em vista que, outros metodos, como por exemplo, dual boot e maquinas virtuais são mais complexos e custosos para serem implementados, porém caso não seja possivel utilizar o WSL, esses metodos podem ser soluções substitutivas."]}],[{"i":"como-instalar-o-wsl-","l":"Como instalar o WSL ?"},{"l":"Comandos para instalação do WSL"},{"l":"Instalar o WSL"},{"l":"Verificar se a instalação deu certo"},{"i":"quer-saber-mais-sobre-wsl-","l":"Quer saber mais sobre WSL ?","p":["----------------------> Documentação oficial WSL<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos basicos WSL"},{"l":"Listar distribuições do Linux disponiveis para instalação"},{"l":"Instalar uma distribuição do Linux"},{"l":"Listar distribuições do Linux instaladas"},{"l":"Mudar versão padrão do WSL"},{"l":"Usar uma distribuição especifica"},{"l":"Listar comandos disponiveis do WSL"},{"i":"quer-saber-mais-comandos-do-wsl-","l":"Quer saber mais comandos do WSL ?","p":["----------------------> Documentação oficial WSL<-----------------------"]}],[{"l":"Introdução","p":["Essa seção do DocStruct apresenta a documentação dos components pré-fabricados no projeto our-react-components, que tem como objetivo facilitar o processo de criação de projetos na Struct, disponibilizando e padronizando os componentes do react mais utilizados.","link para o projeto our-react-components onde se apresentam os código fonte de cada um dos components:","https://github.com/StructCE/our-react-components/tree/main/src/components","link do projeto no stackblitz (rodar o projeto online):","https://stackblitz.com/github/StructCE/our-react-components/tree/main?file=README.md,src%2FApp.tsx"]}],[{"l":"Alert","p":["O componente Alert permite que você crie caixas de alerta personalizadas para interações do usuário em aplicações React.Oferecendo controle sobre o conteúdo, títulos, botões de confirmação , cancelamento, e capacidade de definir o comportamento padrão da caixa de diálogo."]},{"l":"Instalação","p":["Lembre-se de instalar a biblioteca '@radix-ui/react-alert-dialog' pelo comando : npm install @radix-ui/react-alert-dialog"]},{"l":"Adicionando Alert a um novo projeto","p":["Para adicionar o Alert ao projeto, copie os seguintes arquivos para o seu projeto:","Alert/index.tsx","Alert/customRootRender.tsx"]},{"l":"Utilização","p":["Uso padrão:"]},{"l":"Atributos do componente Alert","p":["-title: O título da caixa de alerta.","-content: O conteúdo da mensagem de alerta.","-cancelText: Texto para o botão de cancelamento (padrão: \"Cancelar\").","-confirmText: Texto para o botão de confirmação (padrão: \"Confirmar\").","-onCancel: Função a ser chamada quando o botão de cancelamento é clicado.","-onConfirm: Função a ser chamada quando o botão de confirmação é clicado.","-children: gatilho para abrir a caixa de diálogo.","-defaultOpen: Define se o componente deve iniciar aberto ou não (padrão: false).","-canOpen: Controla se o Alert pode ser aberto (padrão: true)."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Alert ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:","p":["Não é necessário utilizar todos os props do componente."]}],[{"l":"Button","p":["O componente Button é uma forma rápida de criar botões padronizados em suas aplicações React. A ideia é centralizar os estilos padrões de um botão no componente, mantendo as propriedades de um button / comum."]},{"l":"Adicionando Button a um novo projeto","p":["Para adicionar o Button ao projeto, copie os seguintes arquivos para o seu projeto:","Button/index.tsx"]},{"l":"Utilização","p":["Uso padrão:"]},{"l":"Personalização","p":["Você pode personalizar a aparência do Button ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"l":"Atributos do componente","p":["Os atributos do componente 'Button', foram implementados em uma forma padrão : bg-gray-300 border-none py-[0.5em] px-[1em] hover:shadow-lg focus-visible:shadow-lg focus-visible:outline focus-visible:outline-orange-600 focus-visible:outline-offset-1 cursor-pointer rounded-md Porém podem ser alterados com uma className durante a implementação do mesmo."]}],[{"l":"Carousel","p":["O componente Carousel permite que você crie um carrossel de imagens com controles de navegação e indicadores. Ele permite que os usuários naveguem pelas imagens e fornece indicadores para mostrar a posição atual."]},{"l":"Adicionando Carousel a um novo projeto","p":["Para adicionar o Carousel ao projeto, copie os seguintes arquivos para o seu projeto:","Carousel/index.tsx","Carousel/svgs.tsx"]},{"l":"Utilização","p":["1 - Crie um array de imagens para o Carousel, no qual cada imagem contenha um id, o endereço da imagem (url) e um texto alternativo(alt).","2 - Chame a função Carousel, passando como argumento seu array criado.","3 - Estilize o carrosel de acordo com suas preferências de design."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Carousel ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Dropdown Menu","p":["O componente de Menu Dropdown oferece uma maneira fácil de criar menus suspensos personalizados em suas aplicações React. Ele é altamente personalizável e fornece várias opções para criar menus de seleção, menus de contexto e muito mais."]},{"l":"Instalação","p":["Lembre-se de instalar a biblioteca '@radix-ui/react-alert-dialog' pelo comando : pnpm install @radix-ui/react-alert-dialog"]},{"l":"Adicionando Dropdown Menu a um novo projeto","p":["Para adicionar o Dropdown Menu ao projeto, copie os seguintes arquivos para o seu projeto:","DropdownMenu/index.tsx","DropdownMenu/example.tsx"]},{"l":"Exemplo","p":["Uso padrão:"]},{"l":"Observação","p":["O Menu DropDown possúi uma implementação mais extensa que os outros components, mas o modo de uso é o mesmo:","importar o componente.","adicionar ou retirar algum item do menu alterando a estrutura das tags React iniciadas com DropdownMenu.","Estilizar o Menu de acordo com suas preferências, alterando as marcações do Tailwind na className"]}],[{"l":"Form Factory","p":["O componente Form Factory simplifica a criação de formulários com validação em suas aplicações React. Ele utiliza a biblioteca Zod para definir as regras de validação dos campos do formulário e oferece recursos para exibir mensagens de erro e manipular envios de formulários."]},{"l":"Instalação","p":["Antes de usar o componente FormFactory, certifique-se de que a biblioteca Zod esteja instalada em seu projeto. Você pode instalá-la com o comando: pnpm install zod"]},{"l":"Adicionando Form Factory a um novo projeto","p":["Para adicionar o Form Factory ao projeto, copie os seguintes arquivos para o seu projeto:","FormFactory/index.tsx"]},{"l":"Utilização","p":["Para usar o componente de FormFactory em sua aplicação, siga os seguintes passos:","1 - Crie um objeto Zod (ZodObject) que irá gerenciar as validações para os campos do seu formulário. Você pode definir as regras de validação conforme necessário usando o Zod. Consulte a documentação do Zod para obter mais informações sobre as opções de validação disponíveis.","2 - Crie um objeto do tipo FormFactoryInfo que deve conter as seguintes informações:","schema: O objeto Zod criado no passo 1.","fields: Um objeto em que cada chave corresponde a um campo no seu esquema Zod e os valores são objetos com as seguintes propriedades:","label: O rótulo do campo.","defaultValue: O valor padrão do campo.","inputAtrr: Um objeto com os atributos da tag input e seus respectivos valores.","transform: Uma função que recebe o valor atual do input (sempre uma string) para converter no valor do schema (pode ser número, pode capitalizar a string, etc...)","Chame a função FormFactory passando o objeto FormFactoryInfo como argumento para criar um componente de formulário."]},{"l":"Atributos do componente Alert","p":["onValidSubmit: Uma função que será chamada quando o formulário for enviado com sucesso. Ela receberá os dados do formulário validados como argumento.","onInvalidSubmit: Uma função que será chamada quando ocorrerem erros de validação no formulário. Ela receberá um objeto ZodError como argumento.","buttonContent: O conteúdo do botão de envio do formulário. Por padrão, é \"Enviar\"."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Form ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Modal","p":["O componente de Modal é uma ferramenta que facilita a criação de modais personalizados em suas aplicações React. Ele fornece a estrutura básica para criar modais e permite que você os estilize de acordo com suas necessidades."]},{"l":"Instalação","p":["Para usar este componente, você precisa ter a biblioteca @radix-ui/react-dialog instalada em seu projeto. Você pode instalá-la com o comando: pnpm install @radix-ui/react-dialog"]},{"l":"Adicionando Modal a um novo projeto","p":["Para adicionar o Modal ao projeto, copie os seguintes arquivos para o seu projeto:","Modal/index.tsx","Modal/styles.module.css"]},{"l":"Utilização","p":["Para usar o componente de Modal em sua aplicação, siga os seguintes passos:","1 - Importe os componentes Modal.Content, Modal.Root, Modal.Trigger, e Modal.Close","2 - Crie o conteúdo do modal dentro do componente Modal.Content","3 - Use os componentes Modal.Trigger e Modal.Close conforme necessário para abrir e fechar o modal."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Modal ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Radio Input","p":["O componente Radio Input é um input personalizado que isola a aparência para estilização em React."]},{"l":"Instalação","p":["Para usar este componente, você precisa ter a biblioteca @radix-ui/react-radio-group instalada em seu projeto. Você pode instalá-la com o comando: pnpm install @radix-ui/react-radio-group"]},{"l":"Adicionando Radio Input a um novo projeto","p":["Para adicionar o Radio Input ao projeto, copie os seguintes arquivos para o seu projeto:","RadioInput/index.tsx"]},{"l":"Utilização","p":["Para usar o componente Radio Input em sua aplicação, siga os seguintes passos:","1 - Importe o componente CustomRadio e use ele onde você deseja exibir um input de rádio personalizado.","2 - Estilize o CustomRadio de acordo com suas preferências."]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Table","p":["O componente Table é projetado para renderizar uma tabela HTML com dados. Ele aceita uma série de props que permitem definir as colunas, as linhas e ações personalizadas a serem exibidas na tabela."]},{"l":"Adicionando Table a um novo projeto","p":["Para adicionar o Table ao projeto, copie os seguintes arquivos para o seu projeto:","Table/index.tsx","Table/styles.module.scss"]},{"l":"Utilização","p":["Para usar o componente de Table em sua aplicação, siga os seguintes passos:","1 - Importe o componente Table","2 - Defina os campos (colunas) que você deseja exibir na tabela. Isso é feito através da propriedade fields, que deve ser um array de objetos com as propriedades title(título da coluna) e name(correspondência com a propriedade dos objetos de dados).","3 - Crie um array de objetos representando as linhas de dados que você deseja exibir na tabela. Cada objeto deve ter propriedades correspondentes aos nomes definidos em fields.","4 - defina ações personalizadas que podem ser executadas em cada linha da tabela, através da propriedade actions, que deve ser um array de objetos com as propriedades title(título da ação), onClick(função a ser executada ao clicar na ação) e Icon( representa o ícone da ação).","5 - personalize a aparência da tabela ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design."]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Administrativo-Financeiro","p":["A diretoria administrativo-financeira da Struct é o centro da burocracia e logística da empresa júnior. Documentos e dinheiro são as principais responsabilidades desta diretoria, mas ela também é responsável por cuidar da sede física e de outras responsabilidades administrativas relativas a empresa."]},{"l":"Troca de gestão","p":["Caso você tenha sido recentemente eleito como diretor(a) administrativo-financeiro da Struct, gostaria de parabenizá-lo! Embora essa nova atribuição venha com novas obrigações, essa seção irá detalhar todos os passos que devem ser tomados no início de sua gestão. Esses passos irão garantir que você seja, para todos os fins legais e burocráticos, identificado como diretor(a) administrativo-financeiro da Struct e possua as ferramentas necessárias para exercer sua função. Lembre-se que, caso haja alguma dúvida acerca do novo cargo, você sempre pode entrar em contato com os diretores e presidentes das gestões anteriores.","A troca de gestão acontece anualmente (na Struct, geralmente é efetivada em março) e o diretor(a) administrativo-financeiro da Struct deve organizar os documentos legais necessários para manter os nomes da diretoria da empresa atualizados. Será necessário levar no cartório os documentos ata de eleição e termo de posse, autenticá-los e registrá-los."]},{"l":"Conta bancária","p":["O primeiro passo para começar a exercer suas funções após lidar com os documentos de posse dos diretores é ter acesso à conta bancária da Struct, a qual é administrada em conjunto pelo(a) presidente e pelo diretor(a) administrativo-financeiro da Struct.","Para esse fim, será necessário que você e o(a) presidente da Struct compareçam presencialmente à sede do Banco do Brasil da UnB e apresentem alguns documentos que comprovem suas identidades juntamente com os documentos da troca de gestão para obterem acesso à conta bancária. Nesse dia, você também irá criar as senhas que você irá utilizar para ter acesso à conta bancária (recomenda-se que você anote essas senhas em algum lugar).","Após o acesso ter sido liberado (isso demora alguns dias úteis), você precisará retornar à sede para cadastrar os dispositivos que você irá utilizar para ter acesso à conta bancária. Recomenda-se levar o celular para baixar o app do Banco do Brasil e, talvez, um notebook para acessar o Banco do Brasil pelo website (talvez seja necessário instalar um software de segurança no notebook).","Com todos esses passos feitos, você poderá acessar a conta bancária da Struct utilizando sua senha alfanumérica e sua senha numérica de 8 dígitos. Mais detalhes sobre a conta bancária serão fornecidos na seção de Obrigações financeiras."]},{"l":"Listagem de cargo oficial","p":["Uma obrigação menor, mas de certa forma importante, após a sua posse é atualizar suas contas nos serviços utilizados pela Struct para que elas listem apropriadamente o seu novo cargo de diretor(a) administrativo-financeiro. A lista de contas a serem atualizadas inclui:","Assinatura eletrônica do seu email corporativo (verifique com a equipe de marketing se eles já iniciaram o design de uma assinatura padrão para os membros da nova gestão);","Cargo listado no Slack da Struct."]},{"l":"Troca de representante da Struct","p":["Caso o(a) presidente da empresa júnior seja alterado na troca de gestão, será necessário requisitar ao contador da empresa a troca do representante da empresa por meio do seu email corporativo. Para isso, será provavelmente necessário obter uma via autenticada em cartório dos seguintes documentos:","Ata aprovação nova diretoria;","Estatuto;","Documento de identidade com CPF (ou CNH) do representante que responde judicial e extrajudicialmente (no momento, o membro que ocupa a presidência da Struct).","Após os documentos terem sido entregues ao contador e uma pequena taxa ter sido paga ao contador (mais detalhes sobre a realização de pagamentos podem ser encontrados na seção de Obrigações financeiras), o representante da empresa júnior será alterado."]},{"l":"Modificações em documentos","p":["Como diretor(a) administrativo-financeiro da Struct, seu nome deve constar em alguns documentos oficiais da Struct. Ao assumir o cargo, será necessário modificar esses documentos para que suas informações estejam neles. No momento, os seguintes documentos devem ser modificados:","Modelo de contrato de prestação de serviços (Endereço no Google Drive: \" Presidência -> Galeria de modelos -> MODELO_contrato_prestacao_servicos\")."]},{"l":"Obrigações financeiras","p":["A parte financeira da diretoria envolve todo o controle do caixa relativo à empresa júnior. Isso inclui obrigações como contabilizar as movimentações financeiras da Struct, pagar os serviços utilizados pela empresa júnior (como o contador, os gastos do servidor onde os nossos websites são hospedados, etc...) e manter um histórico de todas as dívidas incorridas pelos membros da empresa júnior em nome da Struct (pagas e pendentes). Para exercer essas atribuições, será necessário ter acesso à conta bancária da Struct por meio das senhas geradas na troca de gestão."]},{"l":"Aprovação de pagamentos","p":["Todos os pagamentos feitos pela Struct devem ser aprovados pelo(a) presidente e e pelo diretor(a) administrativo-financeiro. Dessa forma, qualquer transação a ser feita não pode ocorrer sem que ambos esses diretores acessem a conta bancária da Struct. Uma transação é primeiro proposta por um desses diretores, que deve fornecer os detalhes da transação (conta destino, valor, data de efetivação, etc...) para, depois, o outro diretor verificar os detalhes e assinar a transação (na seção de Transações pendentes).","É importante escolher datas de efetivação da transação com uma certa folga em relação ao dia em que a transação é proposta, estar em contato constante com o(a) presidente e verificar se existem transações pendentes constantemente, pois transações que não forem aprovadas por ambos até a data de efetivação não irão ocorrer. Caso uma transação já tenha sido assinada tanto pelo(a) presidente como pelo diretor(a) administrativo-financeiro mas sua data de efetivação ainda não tenha chegado, a transação poderá ser visualizada na seção de Lançamentos futuros."]},{"l":"Balancetes","p":["Os balancetes são documentos mensais que consistem em uma planilha que contém toda e qualquer movimentação de dinheiro dentro da empresa. Como diretor(a) administrativo-financeiro, é sua obrigação fazer os balancetes referentes ao mês anterior no começo de cada mês (quando os gastos mensais já estiverem fechados).","Exemplo de balancete","No começo do mês, o primeiro passo para a realização do balancete consiste no obtenção do extrato da conta bancária da Struct, o que é feito por meio do aplicativo ou do website do Banco do Brasil. Esse extrato é um arquivo pdf que deve ser adicionado ao Google Drive na pasta \" Administração e Financeiro -> Balancetes -> [Ano da sua gestão] -> Extratos\" com o nome \"[Número do mês] - [Nome do mês]\". Após o extrato ter sido adicionado ao Google Drive, você deve criar (por meio do próprio Drive) um documento do tipo \" Planilhas Google\" com base no modelo \" balancete_x\" e preencher esse documento com os ativos (dinheiro recebido) e passivos (gastos) presentes no extrato bancário desse mês.","O valor dos ativos sempre será colocado na coluna \" Devedor\" e o valor dos passivos, na coluna \" Credor\". Procure sempre descrever o ativo/passivo de forma clara e não ambígua, indicando se ele constitui uma parcela de projeto ou pagamento específico. Além disso, lembre-se de preencher o campo \" Total\" da coluna \" Saldo anterior\" com o saldo inicial do mês. Se tudo tiver sido preenchido corretamente, o campo \" Total\" da coluna \" Saldo final\" deve conter o saldo final do mês conforme indicado no extrato (se isso não ocorrer, verifique se todos os ativos e passivos foram adicionados corretamente). Salve o balancete gerado na pasta \" Administração e Financeiro -> Balancetes -> [Ano da sua gestão] -> Planilhas\" com o nome \"[Número do mês] - [Nome do mês]\". Em caso de dúvidas, consulte os balancetes dos meses anteriores.","Após gerar o extrato e preencher o balancete de um mês, uma cópia de ambos os documentos deve ser enviada para o contador da empresa no email de atualização mensal."]},{"l":"Certificado digital","p":["A Struct possui um certificado digital NF-e modelo A1, o qual é necessário para que a emissão de NFEs seja realizada pela plataforma NFE+ e para que o contador da Struct desempenhe certas obrigações financeiras. O certificado em si é um arquivo de extensão .pfx que possui uma senha de acesso. Para que o certificado possa ser instalado, é necessário ter tanto o arquivo de extensão .pfx como a senha de acesso. Esse certificado possui validade de 1 ano, com o vencimento do certificado atual ocorrendo aproximadamente no fim de Outubro.","Como diretor(a) administrativo-financeiro da Struct, cabe a você entrar em contato com o(a) presidente da Struct para que um novo certificado possa ser comprado quando o certificado atual expirar. A compra do certificado precisa contar apenas com a presença do(a) presidente da Struct como representante oficial da Struct e é feita por meio de um agendamento online de atendimento presencial (o qual é necessário para conferência de alguns documentos de identificação), então procure se organizar com antecedência. Existe a possibilidade da realização de um processo por videoconferência, mas, para isso, é necessário que o(a) presidente da Struct possua cadastro biométrico no Serasa, o que é pouco provável de ocorrer."]},{"l":"Compra de um novo certificado","p":["Para comprar um novo certificado digital, basta acessar o site de certificados digitais do serasa e seguir os passos abaixo. É preferível que os passos 1 a 4 desse processo sejam feitos pelo(a) presidente da Struct e que os demais passos sejam feitos pelo(a) diretor(a) administrativo-financeiro.","No menu de compra de certificado à direita da tela inicial, selecione as opções de \"NF-e\", \"A1 - Arquivo\" e \"12 meses\" para as os itens \"Certificado\", \"Dispositivo\" e \"Validade\", respectivamente, e clique em \"Comprar certificado\".","Escolha a opção \"Presencial\", a não ser que o(a) presidente da Struct possua cadastro biométrico no Serasa.","Preencha a tela com os seus dados e agende um horário de atendimento.","Compareça ao atendimento presencial agendado, lembrando-se de levar consigo um documento oficial de identificação e os demais documentos necessários especificados pelo Serasa. Esteja atento a qualquer orientação adicional fornecida por email (ou seja, isso é quase um ENEM, mas sem a necessidade de levar canetas esferográficas de tinta preta). Caso os passos anteriores não tenham sido feitos pelo(a) presidente da Struct, lembre-se que o(a) presidente da Struct precisará estar presente nesse atendimento. Nesse atendimento, você irá criar uma senha. Essa senha não é a senha do certificado em si, mas sim a senha de acesso ao protocolo do certificado, necessária para a emissão online do certificado digital.","Após o atendimento presencial, o endereço de email cadastrado no passo 3 deverá receber um email detalhando um passo a passo a ser seguido para a emissão online do certificado. Esse email também terá um número de protocolo, o qual será necessário, juntamente com a senha criada no atendimento presencial, para emitir o certificado online. Geralmente, faz-se necessário até 24 horas para que o email seja enviado e que o certificado possa ser emitido.","Quando o email for recebido, siga as instruções do email para a emissão do certificado. O email provavelmente irá conter um link para o site de instalação do certificado digital e instruções adicionais sobre plugins e programas a serem instalados para que o certificado digital possa ser emitido. Nesse passo, a senha do certificado será criada. Guarde bem essa senha, pois você precisará dela depois.","Após emitir o certificado com sucesso, você deverá ter feito o download de um arquivo .pfx e deverá ter criado a senha do certificado digital. Cadastre o novo certificado no site do NFE+ se logando no website e seguindo o caminho: \" Aba de configurações -> Região de certificado digital A1 -> Enviar novo certificado\". Além disso, envie o arquivo .pfx e a senha do certificado digital ao contador da Struct. Não se esqueça de pagar o valor do certificado digital, do contrário ele poderá vencer antes que o esperado."]},{"l":"Contador","p":["A Struct paga uma empresa de contabilidade para a realização de serviços necessários ao funcionamento da Struct. Esses serviços incluem a emissão de documentos necessários para regularizar a situação fiscal da empresa júnior, a alteração do representante legal da Struct e a realização de serviços adicionais.","Como diretor(a) administrativo-financeiro da Struct, cabe a você realizar os pagamentos à empresa de contabilidade (os quais devem ser aprovados pelo(a) presidente da Struct), enviar qualquer documento pedido pela empresa de contabilidade para a realização de seus serviços e requisitar serviços e documentos necessários à Struct (como a emissão de documentos relativos ao selo EJ). Lembre-se que essa comunicação geralmente é feita pelo email corporativo da empresa."]},{"l":"Email de atualização mensal","p":["Alguns documentos deverão ser regularmente enviados ao contador. Para facilitar o trabalho do contador de localizar e gerenciar esses documentos, o envio eletrônico desses documentos deve ser feito por meio de um único email enviado mensalmente, o qual deve ser enviado entre o 1º dia do mês e o 5º dia útil do mês. Esse email de atualização mensal deve conter os seguintes documentos:","Balancete do mês anterior;","Extrato bancário do mês anterior;","Notas de entrada e saída emitidas no mês anterior;","Notas fiscais eletrônicas emitidas no mês anterior;"]},{"l":"Fiscalização de parcelas","p":["Os clientes que contrataram a Struct possuem a obrigação de realizar o pagamento do valor acertado no contrato, geralmente por meio de transferências para a conta bancária da Struct. Como diretor(a) administrativo-financeiro da Struct, você possui a função de fiscalizar que os pagamentos de parcelas dos contratos estão ocorrendo de forma regular, registrar qualquer alteração no cronograma de pagamentos e informar o resto da empresa júnior quando algum cliente estiver devendo dinheiro para a Struct.","É importante para a fiscalização de parcelas que certas informações básicas sejam registradas sempre que um novo contrato é fechado pela Struct. Essas informações incluem o nome do cliente, a natureza do contrato (desenvolvimento, manutenção ou consultoria), o faturamento total esperado do contrato, o faturamento total recebido com o contrato, as parcelas a serem pagas com suas respectivas datas de pagamento e quaisquer informações relacionadas ao adiamento de parcelas ou calotes dados pelos clientes. Além disso, possíveis comprovantes de pagamento enviados pelos clientes devem ser armazenados e organizados.","Para a obtenção de algumas dessas informações, você deverá entrar em contato com o diretor(a) de projetos da Struct para que este(a) te notifique quando um novo contrato for assinado e te informe acerca das informações de pagamento desse contrato. Outras informações poderão ser obtidas por meio do acompanhamento dos extratos da conta bancária da Struct.","Caso algum cliente requisite um adiamento no pagamento das parcelas, esteja com alguma parcela pendente ou realize um calote, notifique os diretores da Struct, em especial o(a) presidente, assim que possível para que uma decisão possa ser tomada sobre o que fazer diante dessa situação.","No momento, toda essa fiscalização está sendo feita por meio do Trello da diretoria de ADM-FIN, mas sinta-se livre para adotar qualquer outro meio para registrar essas informações."]},{"l":"Notas de entrada e saída","p":["As notas de entrada e saída são notas fiscais emitidas com o CNPJ (Cadastro Nacional de Pessoa Jurídica) da Struct. Como as notas de entrada e saída devem conter o CNPJ da Struct, é comum que elas sejam notas fiscais relativas a contratos assinados pela Struct e não notas fiscais de gastos simples feitos pelos membros da empresa júnior.","As notas de entrada representam ativos para a empresa júnior e geralmente são notas fiscais eletrônicas emitidas quando um projeto termina de ser pago pelo cliente (veja essa seção para mais detalhes). Enquanto isso, as notas de saída representam passivos (gastos) para a Struct e geralmente são notas fiscais fornecidas pelas empresas contratadas pela Struct quando a última parcela do contrato é paga (caso isso não ocorra, entre em contato com a empresa contratada para requisitar a emissão da nota fiscal).","Tanto as notas de entrada como as notas de saída devem ser enviadas para o contador da empresa no email de atualização mensal, tarefa que cabe a você, diretor(a) administrativo-financeiro da Struct."]},{"l":"Notas fiscais eletrônicas","p":["Uma nota fiscal eletrônica é um documento eletrônico que serve para documentar a prestação de serviços realizada pela Struct. Este documento é geralmente emitido quando o cliente finaliza o pagamento das parcelas do projeto ou, mais raramente, a pedido do cliente. Como diretor(a) administrativo-financeiro da Struct, é sua obrigação emitir as notas fiscais eletrônicas de cada projeto da Struct e enviá-las para o cliente do projeto assim que possível e para o contador no email de atualização mensal.","Legalmente falando, é possível para o cliente exigir a emissão da Nota Fiscal antes da realização do pagamento. Se for o caso do cliente fazer essa exigência, concorde e emita a NFE, mas redobre o cuidado na fiscalização do pagamento.","Para emitir uma nota fiscal eletrônica, utilize a conta da Struct para acessar a plataforma da NFE+(caso você não saiba a conta da Struct para a plataforma NFE+, pergunte essa informação para o presidente atual da Struct ou para o último membro a ocupar a função de diretor administrativo-financeiro).","Tela do site NFE+","Ao clicar no nome de um destinatário, na segunda coluna, é possível ver as informações daquela nota fiscal, o que ajuda no preenchimento de novas notas fiscais em casos de dúvidas. Tome um momento para se familiarizar com as notas fiscais existentes porque isso ajudará a sanar quaisquer dúvidas relativas ao processo como um todo de forma muito mais rápida que fazer perguntas para os últimos diretores administrativo-financeiros da Struct (eu falo por experiência própria)."]},{"l":"Emissão de uma nota fiscal eletrônica","p":["Para emitir uma nota fiscal eletrônica, basta clicar em “Criar nova nota” e seguir os seguintes passos:","Na região \"Dados gerais\", para clientes do Distrito Federal (o mais comum para a Struct) alterar o campo \"Destino da operação\" para \"Operação interna\" e verificar se o campo \"Natureza da operação\" está como \"5933 - Prestação de serviço tributado pelo ISSQN\". Caso o cliente seja de outros estados, altere o campo \"Destino da operação\" para \"Operação interestadual\" e o campo \"Natureza da operação\" para \"6933 - Prestação de serviço tributado pelo ISSQN\".","Na região \"Dados do destinatário\", preencher os campos do cliente do serviço e utilizar a plataforma SINTEGRA para consultar a inscrição estadual e verificar o ICMS a ser preenchido. Caso a plataforma retorne a mensagem \"CONTRIBUINTE NÃO CADASTRADO COMO CONTRIBUINTE DE ICMS.\", altere o valor do campo \"Indicador de IE\" para \"Não contribuinte\".","Na região \"Lista de produtos\", clique em inserir item, e altere o campo \"Dados gerais do ...\" de \"Produto\" para \"Serviço\". No campo \"Nome do serviço\", clique na lupa lateral \"Listar 50\" e escolha \"Aplicação web\" ou \"Hospedagem aplicação web\". No campo \"CFOP\", marque o mesmo que foi marcado no campo \"Natureza da operação\" da seção de \"Dados gerais\", de acordo com a localidade do cliente. No campo \"Refer. GTIN/EAN\", escreva “SEM GTIN”, selecione \"UN\" em \"Unid. Comercial\" e altere o campo \"Valor unitário\" para o valor da parcela da nota fiscal a ser emitida (coloque o valor total de todas as parcelas do projeto pagas até então). Na região \"ISSQN\", clique em “buscar” no campo \"Item lista serviço\" e escolha o mais pertinente (geralmente o item 01.01 - Análise e desenvolvimento de sistemas ou o item 01.07 - Suporte técnico em informática [...] ), insira \"DF\" e \"Brasília\" como UF e munícipio da prestação do serviço e em UF e munícipio do imposto insira a localidade do cliente e preencha o campo \"Alíquota ISSQN (%)\" de acordo com o estado do imposto (no momento 2% para suporte técnico em informática e 5% para Análise e desenvolvimento de sistemas no DF, mas verifique essa informação pesquisando no Google). Na região \"PIS\", preencha o campo \"Situação tributária\" como \"08: Operação sem Incidência da contribuição\". Na região \"COFINS\", preencha o campo \"Alíquota COFINS\" (7,6% no momento, mas verifique essa informação pesquisando no Google). Por fim, respire fundo e clique em \"Salvar\".","Na região \"Informações de serviços\", marque o checkbox \"Informar dados de serviços\" e deixe o campo \"Regime de tributação\" em \"Microempresa municipal\".","Na região \"Dados do transporte\", altere o campo \"Modalidade de frete\" para \"9 – Sem Ocorrência de Transporte\".","Por fim, basta salvar e enviar a nota fiscal e esperar o status de “Autorizada” na coluna de \"Situação\" da mesma. Quando isso ocorrer, clique no minúsculo ícone de impressora ao lado do texto \"Autorizada\" para baixar a nota fiscal eletrônica. Salve o documento baixado no Google Drive na pasta \" Administração e Financeiro -> Nota Fiscal Eletrônica -> [Ano da sua gestão] -> [Número do mês] - [Nome do mês]\" com o nome \" NFE[Número da nota fiscal] - [Nome do cliente]\". Após salvar o documento, envie ele para o cliente do projeto assim que possível e para o contador no email de atualização mensal."]},{"l":"Pagamento de COFINS e ISS","p":["Todo o mês em que ao menos uma nota fiscal eletrônica for emitida e enviada para o contador, a Struct terá que realizar o pagamento dos impostos COFINS e ISS sobre todas as notas fiscais eletrônicas emitidas naquele mês. Os documentos bancários utilizados para a realização do pagamento são gerados pelo próprio contador e enviados geralmente na metade do mês seguinte à emissão das notas fiscais eletrônicas. Como diretor(a) administrativo-financeiro da Struct, é sua responsabilidade realizar esses pagamentos.","Para realizar o pagamento desses impostos, utilize a seção \" Pagamentos -> Leitor de código de barras\" do site ou do aplicativo do Banco do Brasil. O leitor de código de barras propriamente dito geralmente não funciona, mas a tela do leitor fornece as opções \"Digitar código\" e \"Abrir PDF\", as quais funcionam. Após o documento de pagamento ser reconhecido, o pagamento deve ser agendado e designado como \"Débito na conta corrente\". Por fim, não se esqueça de pedir para que o(a) presidente da Struct aprove a transação e de enviar os comprovantes de pagamento para o contador."]},{"l":"Pagamento de dívidas","p":["Muitas vezes, os membros da Struct realizam gastos em nome da empresa júnior, como, por exemplo, na autenticação de documentos em cartório, na confecção de material publicitário e na compra de comida para alguma atividade da empresa júnior (por exemplo, pizza no fim de um coding day). Como diretor(a) administrativo-financeiro, é sua obrigação registrar essas dívidas contraídas pela Struct para com os seus membros e pagar elas assim que possível.","Para registrar as dívidas da Struct, utilize a planilha \" Administração e Financeiro -> Dívidas/Gastos/Projetos -> Dívidas\" e anote a data da dívida, em que consistiu o gasto, qual membro realizou o gasto, o valor do gasto e se o gasto foi pago ou não. Assim que possível, entre em contato com o membro que realizou o gasto, obtenha as informações de pagamento do membro, realize uma transferência da conta bancária da Struct para o membro no valor referente a dívida e, por fim, marque a dívida como paga na planilha.","A planilha de dívidas também possui campos que indicam o total da dívida da Struct para um membro específico, permitindo que um único pagamento seja realizado para sanar várias dívidas contraídas por esse membro. Para configurar a lógica desses campos, basta você colocar o nome do membro na coluna \" A QUEM\" (embaixo do total da dívida da Struct) e utilizar os textos \"SIM\" e \"NÃO\" (em caixa alta) na coluna \" PAGO?\"."]},{"l":"Obrigações administrativas","p":["A parte administrativa da diretoria envolve o gerenciamento de documentos e o cumprimento de obrigações necessários para que a Struct desempenhe suas atividades de forma adequada. Isso inclui tarefas como o cumprimento do selo EJ e das demais obrigações legais impostas pelo MEJ (Movimento Empresa Júnior), a organização e manutenção do espaço sede da empresa júnior e o gerenciamento das demais divisões da diretoria administrativo-financeira."]},{"l":"Selo EJ","p":["O selo EJ é um selo criado pela Concentro, com o objetivo de garantir um mínimo de segurança jurídica às organizações ao proporcionar credibilidade para a empresa júnior frente aos seus stakeholders. Além disso, o selo EJ também possui o propósito de trazer uniformidade ao Movimento Empresa Júnior brasileiro. Como diretor(a) administrativo-financeiro da Struct, é sua obrigação coordenar com o(a) presidente da Struct a entrega dos documentos necessários para a emissão do selo EJ a cada ano, verificando regularmente os prazos de entrega no portal Brasil Júnior. Esses documentos também devem ser adicionados ao Google Drive na pasta \" Administração e Financeiro -> Selo EJ -> Selo EJ [Ano da sua gestão]\".","No Google Drive, existem modelos para os documentos necessários na pasta \" Administração e Financeiro -> Modelos\" e exemplos de documentos utilizados para o selo EJ nos anos anteriores nas pastas \" Administração e Financeiro -> Selo EJ -> Selo EJ [Anos anteriores a sua gestão]\".","Nas subseções abaixo, temos o detalhamento de alguns documentos geralmente requisitados para o selo EJ."]},{"l":"1. Estatuto social","p":["Caso não existam mudanças no estatuto social da Struct em relação ao ano anterior, sinta-se livre para utilizar o documento enviado para o último selo EJ. Caso contrário, o novo estatuto social precisa ser registrado oficialmente. Para isso, basta levar no cartório de pessoa jurídica os seguintes documentos:","Estatuto social alterado","Ata da assembleia em que foi discutida a mudança do estatuto","Requerimento de registro da ata em questão","Requerimento de registro do estatuto em questão"]},{"l":"2. Ata de eleição e termo de posse da gestão em exercício","p":["Esses documentos também precisam ser registrados oficialmente. Para isso, levar no cartório de pessoa jurídica os documentos em questão."]},{"l":"3. FCPJ ou QSA","p":["Esses documentos são emitidos pelo contador mas possuem como pré-requisito a troca de representante da Struct. Assim que o(a) presidente da Struct atual estiver cadastrado(a) oficialmente como representante da Struct, basta pedir ao contador para ele emitir o FCPJ (ou o QSA) e enviar no portal o documento recebido."]},{"l":"4. CNPJ","p":["Para obter esse documento, basta entrar no site de emissão de comprovante de inscrição e situação cadastral do CNPJ da Receita Federal, preencher os dados requeridos (CNPJ da Struct: 21.803.569/0001-65) e baixar o comprovante dado."]},{"i":"5-certidão-negativa-de-débitos-cnd-federal","l":"5. Certidão Negativa de Débitos (CND) federal","p":["Para obter esse documento, basta acessar o site da Receita Federal, na parte de emissão de certidão negativa de débitos, digitar o CNPJ da Struct (21.803.569/0001-65), realizar a emissão de nova certidão (dependendo da data de validade da primeira) e baixar o arquivo gerado."]},{"i":"6-certidão-negativa-de-débitos-cnd-municipal","l":"6. Certidão Negativa de Débitos (CND) municipal","p":["Para obter esse documento, basta acessar o site da Secretaria de Estado de Fazenda do DF, na sessão de emissão de certidão negativa, marcar a opção pessoa jurídica, digitar o CNPJ da Struct (21.803.569/0001-65), marcar a finalidade \"Verificação de Débitos\" e o tipo \"Certidão de Débitos\", e consultar e baixar o arquivo gerado."]},{"l":"7. RAIS Negativa","p":["A RAIS Negativa é um documento que pode ser emitido no site da RAIS. Para o preenchimento dos campos de formulário, utilize as imagens abaixo como base.","Tela 1","Tela 2","Tela 3","Tela 4","Observações:","A atividade econômica e natureza jurídica da empresa júnior podem ser encontradas no documento do CNPJ.","O porte da empresa júnior diz respeito à receita produzida em um ano, seguindo a seguinte relação como referência: até 360k, micro empresa, e até 3600k, pequena empresa.","Para certificar se a empresa júnior é optante pelo Simples ou não, basta consultar esse site.","Na aba de endereço do estabelecimento (Tela 2), a imagem não mostra o email e telefone digitados para não comprometer a privacidade de ex-membros da Struct, mas é importante que os dados (endereço, email, telefone...) estejam de acordo com o que está cadastrado no CNPJ também.","A aba de responsável pela declaração (Tela 4) deve ser preenchida com os dados de quem está gerando o documento.","Depois do preenchimento das telas, basta enviar a declaração e pegar o comprovante de envio."]},{"l":"8. Comprovante de conta bancária ativa","p":["Esse documento possui como pré-requisito o acesso à conta bancária da Struct. Quando a nova gestão possuir acesso à conta bancária da Struct, o(a) presidente ou o(a) diretor(a) administrativo-financeiro da Struct deve entrar no site do banco, navegar até a aba de conta corrente e emitir o extrato de conta corrente. Qualquer mês a partir de Janeiro do ano da auditoria serve."]},{"i":"9-livro-diário-ou-escrituração-contábil-digital-ecd","l":"9. Livro diário ou Escrituração Contábil Digital (ECD)","p":["O livro diário é redigido pelo contador, mas deve ser registrado em cartório de pessoa jurídica (2° Ofício de Pessoa Jurídica), sendo necessário estar encadernado em capa dura, possuir os termos de abertura e fechamento assinados pelo contador e pelo representante da EJ e um requerimento para registro assinado pelo representante legal atual. Custa em torno de R$190,00.","Alternativamente, a Escrituração Contábil Digital (ECD) é um documento que substitui o livro diário para os termos do selo EJ e que possui a vantagem de ser completamente digital (ou seja, não é necessário ir ao cartório). No momento, a parceria da CONCENTRO com o contador faz com que o custo dele seja gratuito."]},{"l":"10. Contrato de serviço","p":["Para obter esse documento, basta escanear um contrato de prestação de serviços a algum cliente assinado pelo cliente e pela Struct."]},{"l":"11. Nota fiscal","p":["Esse documento consiste em uma nota fiscal eletrônica emitida a partir de Outubro do ano anterior ao do selo. Para mais informações sobre como emitir uma nota fiscal eletrônica, visite essa seção."]},{"l":"12. Declaração e Termo de voluntariado","p":["Esses documentos consistem, respectivamente, no documento de dados pessoais de todos os membros da Struct assinado pelo(a) presidente e em um exemplo de termo de voluntariado de qualquer membro assinado pelo membro e também pelo(a) presidente."]},{"l":"13. Comprovante de reconhecimento da IES","p":["Este documento é redigido pela Struct e assinado tanto pelo(a) coordenador(a) do curso de Engenharia de Computação como pelo(a) orientador(a) da Struct. Um modelo do documento pode ser encontrado no Google Drive em \" Administração e Financeiro -> Modelos -> Institucional\"."]},{"l":"Sede","p":["A sede da Struct é uma sala localizada no prédio SG-11 da Universidade de Brasília (UnB). Como diretor(a) administrativo-financeiro da Struct, é sua obrigação garantir que a sede esteja sempre limpa e bem organizada, de forma que todos os membros possuam usufruir desse espaço e que ele forneça uma boa impressão da empresa júnior para visitantes. A boa organização da sede deve permitir que qualquer documento ou item seja facilmente encontrado por algum dos membros da Struct. Por fim, o gerenciamento dos item que estejam em falta na sede (marcadores, papel, inseticida, etc...) também é uma função da diretoria administrativo-financeira."]}],[{"i":"divisão-de-pesquisa-e-desenvolvimento-rd","l":"Divisão de Pesquisa e Desenvolvimento (R&D)","p":["A divisão de Pesquisa e Desenvolvimento (R&D) possui a missão de pesquisar as ideias que surgirem dentro da empresa, incluindo as vantagens, desvantagens, custos, implementações, possíveis treinamentos e outros aspectos relativos a uma ideia. Essa pesquisa tem o propósito de gerar informações relevantes para a tomada de decisões por parte dos diretores da empresa júnior, motivando a inovação constante dentro da Struct. A supervisão dessa divisão cabe ao(à) diretor(a) administrativo-financeiro da Struct ou a algum membro da diretoria administrativo-financeira que recebeu por delegação do(a) diretor(a) essa função."]},{"l":"Sugestão de ideias","p":["Qualquer membro da Struct pode propor ideias para a divisão de R&D pesquisar. Isso é feito por meio de um documento oficial (existe um modelo no Google Drive chamado \" Sugestão de pesquisa e desenvolvimento (R&D)\"), o qual deve ser preenchido por um membro da empresa júnior e colocado na pasta \" Administração e Financeiro -> Pesquisa e desenvolvimento (R&D) -> [Ano atual] -> Sugestões\" do Google Drive.","Cabe aos membros da diretoria administrativo-financeira da Struct coletarem periodicamente as ideias na pasta de sugestões do Google Drive e decidirem se a pesquisa deverá ser realizada ou não por si mesmos ou encaminharem a sugestão de pesquisa e desenvolvimento para o membro da empresa júnior que possa melhor avaliar a necessidade de realização da pesquisa. Em qualquer cenário, a divisão de R&D deve notificar o membro que sugeriu a pesquisa ao decidir se a pesquisa será ou não realizada e mover a sugestão para a pasta \" Arquivadas\" após tomar todas as ações devidas. Caso a pesquisa não seja realizada, uma justificativa deve ser fornecida. Caso a pesquisa seja realizada, o membro que sugeriu a pesquisa deve ser notificado no momento de sua conclusão."]},{"l":"Pesquisa de ideias","p":["Quando uma sugestão de pesquisa e desenvolvimento for aceita pela divisão de R&D, um dos membros da diretoria administrativo-financeira da Struct deve ser escolhido para pesquisar aquela ideia e escrever os resultados encontrados. Essa pesquisa deve levar no máximo umas 2-3 semanas e deve resultar em um relatório (existe um modelo no Google Drive chamado \" Relatório de pesquisa e desenvolvimento (R&D)\"), o qual será entregue para os diretores da Struct ou para o conjunto de membros especificado no documento de sugestão de pesquisa e desenvolvimento. Esse relatório é bem simples, tendo aproximadamente 1 página (afinal de contas, o curso de Engenharia da Computação já possui trabalhos escritos que chega), e deve providenciar as informações básicas mais importantes resultando da pesquisa.","No momento, o acompanhamento das pesquisas realizadas e pendentes da divisão de R&D é feito pelo Trello, mas sinta-se livre sugerir para o responsável da divisão de R&D a utilização de qualquer outro meio para essa finalidade."]}],[{"l":"Reembolso para membros","p":["Embora o ideal seja evitar essa situação, por vezes, alguma despesa da empresa acaba sendo paga diretamente por algum membro, que acaba precisando de um reembolso do valor investido. No entanto, pelo nosso caráter de Empresa Júnior, somos proibidos de pagar nossos membros, então todo o processo de reembolso deve ser feito de forma cuidadosa para evitar problemas futuros com a receita."]},{"l":"Gastos passíveis de reembolso","p":["Todos os gastos devem ser avisados previamente ao Diretor Administrativo-Financeiro, para ser dado um aceite com antecedência. Alguns dos gastos passíveis de reembolso incluem:","Gastos com cartório","Gastos com transporte para realização de tarefas oficiais da Struct","Compra de materiais para projetos (caso não seja possível a compra direta pela empresa)","Compra de ingressos para eventos oficiais MEJ (Se aprovados previamente pela diretoria de Adm-Fin)","Pagamentos de serviços da Struct (se não puder ser pago diretamente pela empresa, ou houver alguma vantagem no pagamento pelo membro)","Demais casos são de responsabilidade do Diretor de Adm-Fin para analisar. Gastos com gamificação devem ser feitos, preferencialmente, diretamente pela empresa."]},{"l":"Notas fiscais","p":["Exija do membro notas fiscais dos gastos efetuados para validação. Se possível, peça com antecedência para o membro que a nota fiscal seja emitida com o CNPJ da empresa (21.803.569/0001-65). Para gastos com transporte, peça o recibo do Uber ou similares (caso seja o utilizado pelo membro), ou uma nota fiscal de um posto de gasolina, juntamente com fotos do odômetro do carro antes e depois da viagem. Com isso em mão, o Diretor de Adm-Fin pode realizar a transferência do reembolso para o membro."]},{"l":"Recibo de reembolso","p":["Na galeria de modelos no drive da empresa há um modelo de documento de recibo de reembolso. Preencha esse documento com as informações do membro que recebeu o reembolso, o valor do reembolso e a descrição do gasto realizado. Anexe as notas ficais e comprovantes bancários correspondentes ao documento, seja inserindo as imagens no documento ou usando ferramentas como o I Love PDF para mesclar os arquivos. Depois, coloque para o membro assinar no Clicksign. Por fim, registre o reembolso no trello da Adm-Fin, juntamento com o recibo, e guarde o recibo também no drive da empresa."]}],[{"l":"Introdução","p":["Essa página foi criada com o intuito de que se facilite o entendimento sobre cupons e prêmios para os membros."]},{"i":"onde-comprar-os-cupons","l":"Onde comprar os cupons?","p":["iFood(Cupons variando de R$ 10,00 até R$300,00)","Steam(Cupons variando de R$ 10,00 até R$ 200,00)","Para cupons mais diversos:","Americanas"]},{"i":"sites-disponíveis-para-prêmiosprêmios--cupons","l":"Sites disponíveis para prêmios(Prêmios != Cupons)","p":["Kabum","Magalu","Americanas","Casas Bahia"]},{"l":"Credenciais dos sites que temos conta para as compras","p":["Caso você não saiba as credenciais dos sites que foram citados acima, entre em contato com o diretor atual ou o anterior de Adm&Fin da empresa, algum deles te ajudará."]}],[{"l":"Bem-vindo a Diretoria Comercial"}],[{"l":"Bem-vindo a Diretoria de Marketing"}],[{"l":"Bem-vindo a Diretoria de Pessoas"}],[{"i":"o-que-é-heroku-","l":"O que é Heroku ?","p":["Heroku é uma plataforma de deployment de website, desenvolvidos em quase todos frameworks mais famosos utimamente, ela automaticamente analisa o repositório e verifica a linguagem que você está utilizando, e já faz o setup completo, facilitando uma das principais e mais demoradas atividades de um projeto de website. O Heroku roda um container docker com seus scripts de inicialização. Isso significa que é necessário que o seu projeto seja um servidor, ou seja, que ele tenha uma porta para ser acessado, e que ele seja capaz de responder a requisições. Sendo assim, é ideal para api's, mas não para servir assets estáticos(como os gerados numa aplicação React comum).","O Heroku, na ultima atualização dessa documentação, não possui plano gratuito, logo utilizamos self-hosting para o back-end na Struct."]}],[{"i":"como-usar-heroku-","l":"Como usar Heroku ?"},{"l":"Configurando o projeto","p":["Esse deploy esta sendo feito com base em um projeto Rails","Crie uma branch chamada heroku, caso ainda não tenha, e faça as seguintes mudanças;","Crie um arquivo chamado start.sh na raíz do projeto com o seguinte conteúdo:","#!/bin/sh: essa linha tem, por principal objetivo, informar ao shell qual intérprete deverá ser usado para a execução do script. No nosso caso, o intérprete usado será o sh, ou seja o Bourne shell.","rails db:migrate: a linha de código padrão para executar as migrations no rails e garantir que todos os bancos de dados estejam atualizados e com suas informações certas","bundle exec puma -C config/puma.rb: esse código funciona como um rails s, ou seja, serve para executar o puma (servidor padrão do rails) com alguns recursos a mais que o rails s por si só, não oferece.","Caso seu projeto utilize Active Storage, ou guarda alguma imagem enviada por upload, é necessário mudar o path, no qual os arquivos ficam armazenados, escolhendo entre cloudinary e amazon s3. Execute o comando Certo para configurar os arquivos.","Não colocar as chaves de acesso no repositório, apenas no heroku. Na branch de produção, requisitar as variáveis de ambiente no heroku, e colocar no código com ENV['NOME_DA_VARIAVEL'].","Colocar as variáveis de ambiente no heroku","Instalar a SDK do serviço escolhido;","Executar o comando:","config/environments/production.rb;","config/storage.yml;","config/initializers/active_storage.rb;","Colocar as chaves de acesso do serviço escolhido no Heroku;"]},{"l":"Executando deploy do projeto"},{"l":"Por CLI","p":["Tutorial para instalar o CLI do heroku https://devcenter.heroku.com/articles/heroku-cli#download-and-install","Logar no Heroku e criar uma nova aplicação;","Na pasta do repositório do projeto, executar o comando:","Configure o banco de dados para PostgreSQL;","E por fim execute o comando:"]},{"l":"Por Dashboard","p":["Acesse a dashboard da conta de projetos da Struct;","Crie uma nova aplicação;","Navegue até a aba Deploy e selecione a opção GitHub;","Selecione o repositório do projeto;","Selecione a branch Heroku;","Selecione a opção Deploy Branch."]},{"l":"Deploy front-end com heroku","p":["É possível usar do Heroku para fazer deploy de front-end. Basta criar um único endpoint para enviar os assets estáticos do front. Exemplo:","Agora temos uma api, e então o deploy pode ser feito no Heroku."]}],[{"i":"o-que-é-netlify-","l":"O que é Netlify ?","p":["O Netlify é um serviço de hospedagem de sites estáticos, que também oferece serviços de staging e deploy automatizados. Isso significa que não é possível hospedar backend no Netlify, apenas frontend (com possibilidade de AWS Lambda).Para fazer deploy no Netlify, a possiblidade atualmente gratuita é fazer deploy manual, que consiste em gerar e colocar manualmente os arquivos que serão servidos no site. Sendo assim, o processo de bundling deve ser feito na mão."]}],[{"i":"como-usar-netlify-","l":"Como usar Netlify ?"},{"l":"Configurando o projeto","p":["Na própria main, mude o /public/favicon.ico para o real ícone do projeto.","Mude o index.html, trocando os conteúdos das tags meta, title e a lang da tag html.","Pense na possibilidade de adicionar um /public/robots.txt.","Crie uma branch chamada netlify","Mude todas as referências a localhost por suas respectivas urls de produção","Se você tem uma instância axios com a url http://localhost:3333/api/v1, mude para https://seu-projeto.railway.app/api/v1 ou equivalente (a url de staging). Se a url das imagens é http://localhost:3333/, mude para https://seu-projeto.railway.app ou equivalente."]},{"l":"Roteamento Client Side","p":["Geralmente fazemos deploy de React como single page app, com um roteador client side, como react-router-dom. Sendo assim, rotas não são endpoints, e sempre devem ser retornados os mesmos arquivos pra requisições, independente da rota.","Adicione o arquivo _redirects no do projeto com o seguinte conteúdo:"]},{"l":"Fazendo deploy manual","p":["Vá para a branch netlify;","Rode o comando yarn build para gerar uma pasta build com os arquivos estáticos;","Faça login na conta de projetos da Struct;","Selecione a opção de deploy manual ( deploy manually);","Arraste e solte os arquivos da pasta build na área de upload;"]}],[{"i":"o-que-é-self-hosting-back-end-","l":"O que é Self-Hosting (Back-End) ?","p":["Self-hosting, também conhecido como auto-hospedagem, é um conceito em tecnologia que se refere à prática de hospedar e gerenciar seus próprios serviços, aplicativos ou plataformas em infraestrutura própria, em vez de utilizar serviços e plataformas de terceiros ou fornecedores externos. Em outras palavras, quando você opta por self-hosting, você é responsável por configurar, administrar e manter todos os aspectos do serviço ou aplicativo que está executando. No momento, pagamos por um servidor no DigitalOcean, que é um serviço de cloud computing, ou seja, uma plataforma que usa a conectividade da internet para hospedar e prover recursos, programas e informações em nuvem, e usamos ssh para acessá-lo e fazê-lo rodar exatamente o que queremos. Além disso, usamos Docker para poder isolar e rodar vários servidores na mesma máquina. Para levar o tráfego que chega em nossa máquina para o container correto, usamos o Traefik v2 como proxy reverso."]}],[{"i":"como-fazer-self-hosting-back-end","l":"Como fazer Self-Hosting (Back-End)?"},{"l":"Configurando o projeto para deploy","p":["É mantido um repositório no GitBucket com os DockerFiles utilizados para construir as imagens do nosso servidor, bem como um repositório armazenado no servidor, com os arquivos do Docker Compose utilizados para rodar as imagens construídas.","Crie uma branch production;","Adicione Dockerfile ao .gitignore do projeto;"]},{"l":"Crie a imagem Docker","p":["Não coloque Dockerfiles no repositório do projeto, utilize o repositório do GitBucket para isso. Colocar esse arquivo no projeto pode causar problemas de segurança. Muitos dos nossos Dockerfiles usam credenciais que não devem ser expostas.","Pegue o template de Dockerfile no GitBucket","Modifique conforme necessário, a fim de a imagem docker necessária.","Para construir a imagem, use o comando:","Várias das nossas imagens são um pull do projeto, e para isso é necessário um token de acesso no github. Para gerar esse token, pode ser seguida a Documentação do GitHub."]},{"l":"Faça o Push da imagem Docker","p":["Faça login no DockerHub, usando o comando:","Faça o push da imagem para o DockerHub, usando o comando:","O structej/projetos é o usuário/projeto que enviamos a imagem de tag {nome_do_projeto_versão}. É importante fazer assim, pois por padrão projetos no DockerHub são públicas, então enviamos ela para um repositório que sabemos ser privado."]},{"l":"Faça o docker-compose no servidor","p":["Os templates de docker-compose.yml ficam na pasta templates do repositório armazenado no servidor.","Fazer as atualizações localmente;","Fazer um push para o repositório;","Fazer um pull no servidor;","Faça o pull/clone do repositório do Docker Compose, usando o comando","Crie um docker-compose.yml com o serviço do projeto, usando o template de docker-compose.yml."]},{"l":"Atualize a branch production","p":["Crie uma PR para a branch production, com as adições que devem ser feitas no deploy;","Procure por coisas que podem quebrar ou requerem passos adicionais no deploy, como mudanças de banco de dados, ou mudanças de configuração de serviços."]},{"l":"Atualize a imagem docker","p":["Faça o build da imagem docker, usando o comando:","Agora a versão da imagem docker é versão. Sempre incrementamos a versão da imagem docker, para que possamos fazer o rollback caso algo aconteça de errado.","Faça o push da imagem para o DockerHub, usando o comando:"]},{"l":"Atualize o docker-compose no servidor","p":["Mudar a propriedade image do serviço do projeto no docker-compose.yml para a versão atual da imagem docker;","Faça o commit das alterações;","Faça o push do docker-compose.yml;"]}],[{"i":"o-que-é-self-hosting-front-end","l":"O que é Self-Hosting (Front-End)?","p":["Self-hosting, também conhecido como auto-hospedagem, é um conceito em tecnologia que se refere à prática de hospedar e gerenciar seus próprios serviços, aplicativos ou plataformas em infraestrutura própria, em vez de utilizar serviços e plataformas de terceiros ou fornecedores externos. Em outras palavras, quando você opta por self-hosting, você é responsável por configurar, administrar e manter todos os aspectos do serviço ou aplicativo que está executando.Considerando que nenhum framework, e nem SSR, está sendo usado, a aplicação react não inclui servidor. No ambiente de desenvolvimento são usadas ferramentas para servir a aplicação na porta determinada (na Struct determinamos como 3000), mas no deploy utilizamos o NGinx, um servidor web que pode ser usado para servir arquivos estáticos, como imagens, css, js, etc. Sendo assim, depois que nossa aplicação react é buildada, ela é mantida pelo NGinx."]}],[{"i":"como-faz-self-hosting-front-end","l":"Como faz Self-Hosting (Front-End)?"},{"l":"Configurando o projeto","p":["Considere a branch production do projeto front-end-template e suas alterações."]},{"l":"Configurando o NGinx","p":["Criar um arquivo nginx.conf para configuração do NGinx na raíz do projeto.","Colocar o seguinte conteudo dentro do arquivo criado:","Trocar os valores de dominio.exemplo.ex e www.dominio.exemplo2 pelos domínios que o aplicação que será feito o deploy.Se o app for servido em www.struct.com.br, o arquivo deve conter:"]},{"l":"Mudando as urls de localhost","p":["A aplicação React usa urls locais para acessar a API, por exemplo, http://localhost:3333/api/v1. Essas urls devem ser alteradas para as urls de produção, por exemplo, https://api.struct.com.br/api/v1.É possível fazer isso usando variáveis de ambiente, mas no momento deve ser trocado manualmente, como no nosso repositório de exemplo (talvez esse gitbook esteja desatualizado em relação ao repositório, verifique)."]},{"i":"mudando-o-indexhtml","l":"Mudando o index.html","p":["Alterar o arquivo index.html para conter informações corretas sobre a aplicação, bem como os metadados.","Criar um robots.txt, para ajudar os mecanismos de busca, além indexar o site conforme necessario.","Colocar o título correto, colocar descrição, mudar o favicon e a linguagem para pt-BR."]},{"l":"Criando docker image","p":["Vá para a branch production localmente.","Crie um arquivo chamado Dockerfile na raíz do projeto.","Atualize o url do git presente no arquivo, mudando o nome do projeto e o token de autenticação do GitHub."]},{"l":"Criando container","p":["Atualize o repositório de docker_compose da Struct com o seguinte comando:","Crie uma pasta com o nome do projeto.","Modifique o template de docker-compose.yml do Traefik com os nomes que podem ser usados para identificar o projeto nos logs, caso ocorra algum erro.","Definir a imagem que será usada com o valor de image.","Alterar os valores de environment, restart, volumes, e networks.","Crie o container usando o comando:"]}],[{"l":"Bem-vindo a Diretoria de Projetos"}],[{"l":"Bem-vindo a Diretoria de Presidentes"}]]