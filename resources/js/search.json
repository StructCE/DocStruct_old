[[{"i":"bem-vindo-à-wiki-da-struct","l":"Bem-Vindo à Wiki da {struct}","p":["Este é um espaço no Retype com o objetivo de concentrar todo o conhecimento possível da Struct em um só lugar."]},{"l":"Conteúdo","p":["Neste espaço deve-se concentrar todos os conhecimentos de gestão e execução de projetos assim como gestão da Struct em si. Por favor, contribua toda vez que verificar que algo está faltando. Caso tenha dúvidas de como trabalhar aqui, acesse a documentação do Retype."]},{"l":"Primeiros Passos"},{"l":"Repositório","p":["Para começar a trabalhar no Retype, clone o repositório no GitHub, acesse a branch da sua diretoria e começe a fazer as modificações nela. É recomendado avisar os outros membros da sua diretoria, para que não haja duas pessoas trabalhando na mesma branch ao mesmo tempo."]},{"i":"observações-importantes","l":"Observações importantes:","p":["Use, preferencialmente, a branch de desenvolvimento da sua diretoria para fazer mudanças;","Jamais faça mudanças diretamente na master (boatos de que quem o fez não está mais na Struct para contar a história);","Antes de abrir um pull request, verifique o funcionamento da branch no ambiente de deploy;","Quando abrir um pull request, peça para alguém da diretoria de Adm-Fin revisar."]},{"l":"Instalação","p":["Para instalar a nova ferramenta para documentação, execute os comandos dependendo do gerenciador de pacotes que você usa:"]},{"l":"Arquivos","p":["Para poder começar a documentar com retype:","Criação do diretório: os futuros diretórios e seus arquivos .md aparecerão na barra lateral, com seus próprios nomes caso não sejam personalizados/configurados.","Configuração: cria-se um arquivo .yml para algumas configurações, como os nomes dos diretóros na barra lateral, ícones para representação etc.","Conteúdo: enfim, cria-se um arquivo .md, onde será estruturada e organizada toda a documentação por meio das ferramentas do Retype."]},{"i":"#","p":["É possível criar subdiretórios, basta fazer o mesmo processo só que dentro de um diretório."]},{"l":"Algumas ferramentas importantes"},{"l":"Alerta","p":["Este é um alerta do retype"]},{"l":"Código"},{"l":"Container","p":["A vantagem do container é você poder personalizar o css separadamente.","Este é um container personalizado"]},{"l":"Table","p":["Para mostrar a diferência entre aparência e código, usamos o componente table"]},{"i":"#","p":["Para mais informações sobre documentação em Retype, consulte a seção especificações."]},{"l":"Especificações"},{"l":"Git e GitHub","p":["Para realizar modificações nas páginas do Retype, é necessário ter um conhecimento básico em alguns conceitos de git, como: add, commit, pull, clone, push e branch. Caso não possua domínio sobre esses conceitos ou deseje revisar algum, a Struct possui um material apresentando uma explicação sucinta dos principais comandos. Caso queira obter informações mais detalhadas, pode-se consultar o livro Pro Git gratuitamente."]},{"l":"Funcionamento","p":["O Retype usa arquivos de formato markdown, como componentes, para a estruturação da documentação online, os exibindo na forma de páginas web. O roteamento dos componentes é feita de forma automática pelo Retype e de acordo com os diretórios do projeto. O diretório raiz do projeto pode conter um arquivo .yml que cuida da configuração do site, como a navbar, footer etc. Assim como, cada componente do projeto também pode conter um arquivo .yml para a configuração separada do componente e um arquivo .md para a própria estruturação em markdown.","Em um arquivo .yml, com nome padrão de index.yml, é feita a personalização e configuração do site ou de um componente específico. Para a configuração do site, pode ser necessário a consulta das ferramentas providas pelo Retype. Já para a configuração de um componente específico há outras ferramentas disponíveis.","Em um arquivo .md é feita a estruturação em markdown do site ou componente, sem ele nada deve aparecer no site ou no componente. O Retype provê muitas ferramentas para estruturar o conteúdo da documentação. Caso deseje aprender mais sobre como escrever em arquivos markdown, seria interessante também dar uma olhada em sua sintaxe básica."]}],[{"l":"Introdução","p":["Essa seção do DocStruct apresenta a documentação dos components pré-fabricados no projeto our-react-components, que tem como objetivo facilitar o processo de criação de projetos na Struct, disponibilizando e padronizando os componentes do react mais utilizados.","link para o projeto our-react-components onde se apresentam os código fonte de cada um dos components:","https://github.com/StructCE/our-react-components/tree/main/src/components","link do projeto no stackblitz (rodar o projeto online):","https://stackblitz.com/github/StructCE/our-react-components/tree/main?file=README.md,src%2FApp.tsx"]}],[{"l":"Alert","p":["O componente Alert permite que você crie caixas de alerta personalizadas para interações do usuário em aplicações React.Oferecendo controle sobre o conteúdo, títulos, botões de confirmação , cancelamento, e capacidade de definir o comportamento padrão da caixa de diálogo."]},{"l":"Instalação","p":["Lembre-se de instalar a biblioteca '@radix-ui/react-alert-dialog' pelo comando : npm install @radix-ui/react-alert-dialog"]},{"l":"Adicionando Alert a um novo projeto","p":["Para adicionar o Alert ao projeto, copie os seguintes arquivos para o seu projeto:","Alert/index.tsx","Alert/customRootRender.tsx"]},{"l":"Utilização","p":["Uso padrão:"]},{"l":"Atributos do componente Alert","p":["-title: O título da caixa de alerta.","-content: O conteúdo da mensagem de alerta.","-cancelText: Texto para o botão de cancelamento (padrão: \"Cancelar\").","-confirmText: Texto para o botão de confirmação (padrão: \"Confirmar\").","-onCancel: Função a ser chamada quando o botão de cancelamento é clicado.","-onConfirm: Função a ser chamada quando o botão de confirmação é clicado.","-children: gatilho para abrir a caixa de diálogo.","-defaultOpen: Define se o componente deve iniciar aberto ou não (padrão: false).","-canOpen: Controla se o Alert pode ser aberto (padrão: true)."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Alert ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:","p":["Não é necessário utilizar todos os props do componente."]}],[{"l":"Button","p":["O componente Button é uma forma rápida de criar botões padronizados em suas aplicações React. A ideia é centralizar os estilos padrões de um botão no componente, mantendo as propriedades de um button / comum."]},{"l":"Adicionando Button a um novo projeto","p":["Para adicionar o Button ao projeto, copie os seguintes arquivos para o seu projeto:","Button/index.tsx"]},{"l":"Utilização","p":["Uso padrão:"]},{"l":"Personalização","p":["Você pode personalizar a aparência do Button ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"l":"Atributos do componente","p":["Os atributos do componente 'Button', foram implementados em uma forma padrão : bg-gray-300 border-none py-[0.5em] px-[1em] hover:shadow-lg focus-visible:shadow-lg focus-visible:outline focus-visible:outline-orange-600 focus-visible:outline-offset-1 cursor-pointer rounded-md Porém podem ser alterados com uma className durante a implementação do mesmo."]}],[{"l":"Carousel","p":["O componente Carousel permite que você crie um carrossel de imagens com controles de navegação e indicadores. Ele permite que os usuários naveguem pelas imagens e fornece indicadores para mostrar a posição atual."]},{"l":"Adicionando Carousel a um novo projeto","p":["Para adicionar o Carousel ao projeto, copie os seguintes arquivos para o seu projeto:","Carousel/index.tsx","Carousel/svgs.tsx"]},{"l":"Utilização","p":["1 - Crie um array de imagens para o Carousel, no qual cada imagem contenha um id, o endereço da imagem (url) e um texto alternativo(alt).","2 - Chame a função Carousel, passando como argumento seu array criado.","3 - Estilize o carrosel de acordo com suas preferências de design."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Carousel ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Dropdown Menu","p":["O componente de Menu Dropdown oferece uma maneira fácil de criar menus suspensos personalizados em suas aplicações React. Ele é altamente personalizável e fornece várias opções para criar menus de seleção, menus de contexto e muito mais."]},{"l":"Instalação","p":["Lembre-se de instalar a biblioteca '@radix-ui/react-alert-dialog' pelo comando : pnpm install @radix-ui/react-alert-dialog"]},{"l":"Adicionando Dropdown Menu a um novo projeto","p":["Para adicionar o Dropdown Menu ao projeto, copie os seguintes arquivos para o seu projeto:","DropdownMenu/index.tsx","DropdownMenu/example.tsx"]},{"l":"Exemplo","p":["Uso padrão:"]},{"l":"Observação","p":["O Menu DropDown possúi uma implementação mais extensa que os outros components, mas o modo de uso é o mesmo:","importar o componente.","adicionar ou retirar algum item do menu alterando a estrutura das tags React iniciadas com DropdownMenu.","Estilizar o Menu de acordo com suas preferências, alterando as marcações do Tailwind na className"]}],[{"l":"Form Factory","p":["O componente Form Factory simplifica a criação de formulários com validação em suas aplicações React. Ele utiliza a biblioteca Zod para definir as regras de validação dos campos do formulário e oferece recursos para exibir mensagens de erro e manipular envios de formulários."]},{"l":"Instalação","p":["Antes de usar o componente FormFactory, certifique-se de que a biblioteca Zod esteja instalada em seu projeto. Você pode instalá-la com o comando: pnpm install zod"]},{"l":"Adicionando Form Factory a um novo projeto","p":["Para adicionar o Form Factory ao projeto, copie os seguintes arquivos para o seu projeto:","FormFactory/index.tsx"]},{"l":"Utilização","p":["Para usar o componente de FormFactory em sua aplicação, siga os seguintes passos:","1 - Crie um objeto Zod (ZodObject) que irá gerenciar as validações para os campos do seu formulário. Você pode definir as regras de validação conforme necessário usando o Zod. Consulte a documentação do Zod para obter mais informações sobre as opções de validação disponíveis.","2 - Crie um objeto do tipo FormFactoryInfo que deve conter as seguintes informações:","schema: O objeto Zod criado no passo 1.","fields: Um objeto em que cada chave corresponde a um campo no seu esquema Zod e os valores são objetos com as seguintes propriedades:","label: O rótulo do campo.","defaultValue: O valor padrão do campo.","inputAtrr: Um objeto com os atributos da tag input e seus respectivos valores.","transform: Uma função que recebe o valor atual do input (sempre uma string) para converter no valor do schema (pode ser número, pode capitalizar a string, etc...)","Chame a função FormFactory passando o objeto FormFactoryInfo como argumento para criar um componente de formulário."]},{"l":"Atributos do componente Alert","p":["onValidSubmit: Uma função que será chamada quando o formulário for enviado com sucesso. Ela receberá os dados do formulário validados como argumento.","onInvalidSubmit: Uma função que será chamada quando ocorrerem erros de validação no formulário. Ela receberá um objeto ZodError como argumento.","buttonContent: O conteúdo do botão de envio do formulário. Por padrão, é \"Enviar\"."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Form ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Modal","p":["O componente de Modal é uma ferramenta que facilita a criação de modais personalizados em suas aplicações React. Ele fornece a estrutura básica para criar modais e permite que você os estilize de acordo com suas necessidades."]},{"l":"Instalação","p":["Para usar este componente, você precisa ter a biblioteca @radix-ui/react-dialog instalada em seu projeto. Você pode instalá-la com o comando: pnpm install @radix-ui/react-dialog"]},{"l":"Adicionando Modal a um novo projeto","p":["Para adicionar o Modal ao projeto, copie os seguintes arquivos para o seu projeto:","Modal/index.tsx","Modal/styles.module.css"]},{"l":"Utilização","p":["Para usar o componente de Modal em sua aplicação, siga os seguintes passos:","1 - Importe os componentes Modal.Content, Modal.Root, Modal.Trigger, e Modal.Close","2 - Crie o conteúdo do modal dentro do componente Modal.Content","3 - Use os componentes Modal.Trigger e Modal.Close conforme necessário para abrir e fechar o modal."]},{"l":"Personalização","p":["Você pode personalizar a aparência do Modal ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design"]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Radio Input","p":["O componente Radio Input é um input personalizado que isola a aparência para estilização em React."]},{"l":"Instalação","p":["Para usar este componente, você precisa ter a biblioteca @radix-ui/react-radio-group instalada em seu projeto. Você pode instalá-la com o comando: pnpm install @radix-ui/react-radio-group"]},{"l":"Adicionando Radio Input a um novo projeto","p":["Para adicionar o Radio Input ao projeto, copie os seguintes arquivos para o seu projeto:","RadioInput/index.tsx"]},{"l":"Utilização","p":["Para usar o componente Radio Input em sua aplicação, siga os seguintes passos:","1 - Importe o componente CustomRadio e use ele onde você deseja exibir um input de rádio personalizado.","2 - Estilize o CustomRadio de acordo com suas preferências."]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Table","p":["O componente Table é projetado para renderizar uma tabela HTML com dados. Ele aceita uma série de props que permitem definir as colunas, as linhas e ações personalizadas a serem exibidas na tabela."]},{"l":"Adicionando Table a um novo projeto","p":["Para adicionar o Table ao projeto, copie os seguintes arquivos para o seu projeto:","Table/index.tsx","Table/styles.module.scss"]},{"l":"Utilização","p":["Para usar o componente de Table em sua aplicação, siga os seguintes passos:","1 - Importe o componente Table","2 - Defina os campos (colunas) que você deseja exibir na tabela. Isso é feito através da propriedade fields, que deve ser um array de objetos com as propriedades title(título da coluna) e name(correspondência com a propriedade dos objetos de dados).","3 - Crie um array de objetos representando as linhas de dados que você deseja exibir na tabela. Cada objeto deve ter propriedades correspondentes aos nomes definidos em fields.","4 - defina ações personalizadas que podem ser executadas em cada linha da tabela, através da propriedade actions, que deve ser um array de objetos com as propriedades title(título da ação), onClick(função a ser executada ao clicar na ação) e Icon( representa o ícone da ação).","5 - personalize a aparência da tabela ajustando as classes CSS definidas no código. Adicione ou substitua classes de acordo com suas preferências de design."]},{"i":"exemplo","l":"Exemplo:"}],[{"l":"Bem-vindo a Diretoria Comercial"}],[{"l":"Bem-vindo a Diretoria Financeira"}],[{"l":"Bem-vindo a Diretoria de Marketing"}],[{"l":"Bem-vindo a Diretoria de Pessoas"}],[{"l":"Bem-vindo a Diretoria de Presidentes"}],[{"i":"o-que-é-deploy-back-end-","l":"O que é deploy Back-End ?","p":["O deploy Back-End refere-se ao processo de implantação ou disponibilização de um aplicativo ou serviço que opera no lado do servidor (back-end) para que possa ser acessado e utilizado pelos usuários finais ou outros componentes do sistema. Em termos mais simples, é quando uma aplicação de back-end é lançada em um ambiente de produção, tornando-a disponível para uso em escala. O deploy no Back-End implica em transferir os arquivos e códigos da aplicação para um servidor ou infraestrutura adequada, onde o sistema estará em execução de forma contínua e acessível pela Internet."]}],[{"i":"o-que-é-heroku-","l":"O que é Heroku ?","p":["Heroku é uma plataforma de deployment de website, desenvolvidos em quase todos frameworks mais famosos utimamente, ela automaticamente analisa o repositório e verifica a linguagem que você está utilizando, e já faz o setup completo, facilitando uma das principais e mais demoradas atividades de um projeto de website. O Heroku roda um container docker com seus scripts de inicialização. Isso significa que é necessário que o seu projeto seja um servidor, ou seja, que ele tenha uma porta para ser acessado, e que ele seja capaz de responder a requisições. Sendo assim, é ideal para api's, mas não para servir assets estáticos(como os gerados numa aplicação React comum). Porém, no atual momento, o Heroku não possui plano gratuito, logo utilizamos self-hosting para o back-end na Struct e será mantido a documentação existente."]}],[{"i":"como-usar-heroku-","l":"Como usar Heroku ?"},{"l":"Preparando o projeto","p":["Crie uma branch chamada heroku, caso ainda não tenha, e faça as seguintes mudanças:","Crie um arquivo chamado start.sh na raíz do projeto com o seguinte conteúdo:","#!/bin/sh: essa linha tem, por principal objetivo, informar ao shell qual intérprete deverá ser usado para a execução do script. No nosso caso, o intérprete usado será o sh, ou seja o Bourne shell.","rails db:migrate: a linha de código padrão para executar as migrations no rails e garantir que todos os bancos de dados estejam atualizados e com suas informações certas","bundle exec puma -C config/puma.rb: esse código funciona como um rails s, ou seja, serve para executar o puma (servidor padrão do rails) com alguns recursos a mais que o rails s por si só, não oferece.","Caso seu projeto utilize Active Storage, ou guarda alguma imagem enviada por upload, é necessário mudar onde os arquivos ficam armazenados, escolhendo entre cloudinary e amazon s3. Em resumo, deve ser configurado os arquivos:","ATENÇÃO: Não colocar as chaves de acesso no repositório, apenas no heroku. Na branch de produção, requerer as variáveis de ambiente no heroku, e colocar no código com ENV['NOME_DA_VARIAVEL']. Por exemplo","Gemfile(instalar a SDK do serviço escolhido, depois rodar bundle);","config/environments/production.rb;","config/storage.yml;","config/initializers/active_storage.rb. Além de precisar colocar as chaves de acesso do serviço escolhido, lá no heroku."]},{"l":"Subindo o projeto"},{"i":"por-cli-command-line-interface","l":"Por CLI (Command Line Interface)","p":["(Essa parte da documentação foi feita há bastante tempo por Pedro Augusto Ramalho Duarte)","Se for sua primeira fez, siga o tutorial para instalar o cli do heroku https://devcenter.heroku.com/articles/heroku-cli#download-and-install","Vídeo tutorial: https://youtu.be/V8wGbZOAe38","Depois basta logar no heroku e criar um novo app.","Na pasta do repositório do projeto, digite o comando heroku git:remote -a nome_do_app","Configure o banco de dados para postgresql","E por fim rode o comando git push heroku master"]},{"l":"Por Dashboard","p":["Acesse a dashboard da conta de projetos da Struct e crie um novo app. Em seguida, vá até a aba Deploy e selecione a opção GitHub. Selecione o repositório do projeto, escolha a branch heroku e clique em Deploy Branch. O deploy será feito automaticamente."]},{"i":"observação","l":"Observação:","p":["É possível usar do Heroku para fazer deploy de front-end. Basta criar um único endpoint para enviar os assets estáticos do front. Exemplo:","Agora temos uma api, e então o deploy pode ser feito no Heroku."]}],[{"i":"o-que-é-self-hosting-back-end-","l":"O que é Self-Hosting (Back-End) ?","p":["Self-hosting, também conhecido como auto-hospedagem, é um conceito em tecnologia que se refere à prática de hospedar e gerenciar seus próprios serviços, aplicativos ou plataformas em infraestrutura própria, em vez de utilizar serviços e plataformas de terceiros ou fornecedores externos. Em outras palavras, quando você opta por self-hosting, você é responsável por configurar, administrar e manter todos os aspectos do serviço ou aplicativo que está executando. No momento, pagamos por um servidor no DigitalOcean, que é um serviço de cloud computing, ou seja, uma plataforma que usa a conectividade da internet para hospedar e prover recursos, programas e informações em nuvem, e usamos ssh para acessá-lo e fazê-lo rodar exatamente o que queremos."]}],[{"i":"como-fazer-self-hosting-back-end","l":"Como fazer Self-Hosting (Back-End)?"},{"l":"Nossa infraestrutura","p":["Usamos Docker e Docker Compose para poder isolar e rodar vários servidores na mesma máquina. Para levar o tráfego que chega em nossa máquina para o container correto, usamos o Traefik v2 como proxy reverso.","É mantido um repositório no gitbucket com os Dockerfiles utilizados para construir as imagens do nosso servidor.","É mantido um repositório que está presente no servidor, com os arquivos do Docker Compose utilizados para rodar as imagens construídas."]},{"l":"Configure o projeto","p":["Crie uma branch production, caso não exista, no projeto desenvolvido, e faça a configuração específica para esse deploy.","Também adicione Dockerfile ao .gitignore do projeto."]},{"l":"Crie a imagem docker","p":["Não coloque Dockerfiles no repositório do projeto, utilize o repositório do gitbucket para isso.","Colocar esse arquivo no projeto pode causar problemas de segurança, e não é uma boa prática. Muitos dos nossos Dockerfiles usam credenciais que não devem ser expostas.","Pegue o template de Dockerfile(no momento não existe template, então busque do último projeto produzido) e modifique conforme necessário para gerar uma imagem docker.","Para gerar a imagem, use o comando docker build -t structej/projetos:nome-projeto-1.0 . na raíz do projeto. Isso constrói a imagem e coloca a tag nome-projeto-1.0 nela.","Várias das nossas imagens são um pull do projeto, e para isso é necessário um token de acesso no github. Para gerar esse token, pode ser seguida a documentação do github."]},{"l":"Faça o push da imagem","p":["Faça login no Docker Hub, usando o comando docker login. Talvez seja necessário inserir as nossas credenciais.","Faça o push da imagem para o Docker Hub, usando o comando docker push structej/projetos:nome-projeto-1.0. Isso envia a imagem para o Docker Hub, onde ela pode ser acessada pelo docker-compose.","O structej/projetos é o usuário/projeto que enviamos a imagem de tag nome-projeto-1.0. É importante fazer assim, pois por padrão projetos no Docker Hub são públicas, então enviamos ela para um repositório que sabemos ser privado."]},{"l":"Faça o docker-compose no servidor","p":["Estamos guardando templates de docker-compose.yml na pasta templates do repositório presente no servidor. Veja atualizações por lá.","É recomendado fazer as atualizações localmente, dar um push para o repositório, e depois dar um pull no servidor.","Faça o pull/clone do repositório do Docker Compose, usando o comando git pull/clone. Crie um docker-compose.yml com o serviço do projeto, usando o template de docker-compose.yml(no momento o template só inclui configuração do traefik, então busque configurações adicionais do último projeto produzido).","O template de traefik possui palavras chaves que devem ser substituídas. Utilize múltiplos cursores para garantir que não esqueceu de alterar uma das palavras chaves em algum lugar."]},{"l":"Atualize a branch production","p":["Peça para que um membro da equipe faça um PR para a branch production do projeto, com as adições que devem ser feitas no deploy.","Procure por coisas que podem quebrar ou requerem passos adicionais no deploy, como mudanças de banco de dados, ou mudanças de configuração de serviços."]},{"l":"Atualize a imagem docker","p":["Faça o build da imagem docker, usando o comando docker build -t structej/projetos:nome-projeto-x.x . na raíz do projeto.","Agora a versão da imagem docker é x.x. Sempre incrementamos a versão da imagem docker, para que possamos fazer o rollback caso algo aconteça de errado.","Faça o push da imagem para o Docker Hub, usando o comando docker push structej/projetos:nome-projeto-x.x.","O que pode acontecer de errado?","A branch possuía coisas que quebram o deploy, e o container fica em estado de erro. Nesse caso, o traefik não consegue acessar o container, e o site fica fora do ar;","A atualização à branch introduziu um bug grave, mas o container não fica em estado de erro. Nesse caso, o traefik consegue acessar o container, mas o site pode não funcionar corretamente;","O Dockerfile foi alterado e possui alguma coisa errada (por exemplo em versionamento), mas o build ainda funciona. Nesse caso, novamente, o traefik consegue acessar o container, mas o site pode não funcionar corretamente;","etc."]},{"l":"Atualize o docker-compose no servidor","p":["Mude a propriedade image do serviço do projeto no docker-compose.yml para a versão atual da imagem docker. Faça o commit e o push do docker-compose.yml.","Exemplo:"]}],[{"i":"o-que-é-deploy-front-end-","l":"O que é deploy Front-End ?","p":["O \"deploy\" de front-end é o processo de implantação ou disponibilização de um aplicativo, site ou projeto front-end em um ambiente de produção, tornando-o acessível ao público ou aos usuários finais. Em outras palavras, é o momento em que o código-fonte do front-end é carregado em um servidor ou plataforma de hospedagem, permitindo que os usuários acessem e interajam com o produto final. Vale ressaltar que o front-end é a parte da aplicação ou site com a qual os usuários interagem diretamente. É a interface gráfica e interativa que engloba elementos como layout, design, botões, formulários, imagens e todo o conteúdo visualmente perceptível na tela do usuário."]}],[{"i":"o-que-é-netlify-","l":"O que é Netlify ?","p":["O Netlify é um serviço de hospedagem de sites estáticos, que também oferece serviços de staging e deploy automatizados. Isso significa que não é possível hospedar backend no Netlify, apenas frontend (com possibilidade de AWS Lambda).Para fazer deploy no Netlify, a possiblidade atualmente gratuita é fazer deploy manual, que consiste em gerar e colocar manualmente os arquivos que serão servidos no site. Sendo assim, o processo de bundling deve ser feito na mão."]}],[{"i":"como-usar-netlify-","l":"Como usar Netlify ?"},{"l":"Como fazer deploy manual"},{"l":"Preparando o projeto","p":["Na própria main, mude o /public/favicon.ico para o real ícone do projeto. Mude o index.html, trocando os conteúdos das tags meta, title e a lang da tag html. Pense na possibilidade de adicionar um /public/robots.txt.","Para seguir os próximos passos, primeiro crie uma branch chamada netlify no seu projeto, caso ainda não exista.","Mude todas as referências a localhost por suas respectivas urls de produção. Por exemplo, se você tem uma instância axios com a url http://localhost:3333/api/v1, mude para https://seu-projeto.railway.app/api/v1 ou equivalente (a url de staging). Se a url das imagens é http://localhost:3333/, mude para https://seu-projeto.railway.app ou equivalente."]},{"l":"Para roteamento client side","p":["Geralmente fazemos deploy de React como single page app, com um roteador client side, como react-router-dom. Sendo assim, rotas não são endpoints, e sempre devem ser retornados os mesmos arquivos pra requisições, independente da rota.","Para tal, adicione o arquivo _redirects no do projeto com o seguinte conteúdo:"]},{"l":"Fazendo deploy manual","p":["Vá para a branch netlify","Rode o comando yarn build para gerar uma pasta build com os arquivos estáticos.","Faça login na conta de projetos da struct","Selecione a opção de deploy manual ( deploy manually)","Arraste e solte os arquivos da pasta build na área de upload"]}],[{"i":"o-que-é-self-hosting-front-end","l":"O que é Self-Hosting (Front-End)?","p":["Self-hosting, também conhecido como auto-hospedagem, é um conceito em tecnologia que se refere à prática de hospedar e gerenciar seus próprios serviços, aplicativos ou plataformas em infraestrutura própria, em vez de utilizar serviços e plataformas de terceiros ou fornecedores externos. Em outras palavras, quando você opta por self-hosting, você é responsável por configurar, administrar e manter todos os aspectos do serviço ou aplicativo que está executando. Considerando que nenhum framework, e nem SSR, está sendo usado, o app react não inclui servidor. No ambiente de desenvolvimento são usadas ferramentas para servir o app na porta determinada (na Struct determinamos como 3000), mas no deploy utilizamos o NGinx."]}],[{"i":"como-faz-self-hosting-front-end","l":"Como faz Self-Hosting (Front-End)?"},{"l":"Configurando o repositório","p":["Considere a branch production do projeto front-end-template e suas alterações."]},{"l":"Configurando o NGinx","p":["O NGinx é um servidor web que pode ser usado para servir arquivos estáticos, como imagens, css, js, etc. Sendo assim, depois que nosso app react é buildado, ele é servido pelo NGinx.","Para isso, é necessário criar um arquivo de configuração para o NGinx na raíz do projeto, chamado nginx.conf. Esse arquivo deve conter:","Trocando os valores de dominio.exemplo.ex e www.dominio.exemplo2 pelos domínios que o app será servido. Por exemplo, se o app for servido em www.struct.com.br, o arquivo deve conter:"]},{"l":"Mudando as urls de localhost","p":["O app react usa urls locais para acessar a API, por exemplo, http://localhost:3333/api/v1. Essas urls devem ser alteradas para as urls de produção, por exemplo, https://api.struct.com.br/api/v1.","É possível fazer isso usando variáveis de ambiente, mas no momento deve ser trocado manualmente, como no nosso repositório de exemplo (talvez esse gitbook esteja desatualizado em relação ao repositório, verifique)."]},{"i":"mudando-o-indexhtml","l":"Mudando o index.html","p":["O arquivo index.html deve ser alterado para conter informações corretas sobre o app, e metadados. Talvez também seja útil criar um robots.txt, que serve para ajudar mecanismos de busca a indexar o site da maneira desejada, veja de acordo com seu projeto.","As mudanças gerais são colocar o título correto, colocar descrição, mudar o favicon e a linguagem para pt-BR."]},{"l":"Criando a docker image","p":["Vá para a branch production localmente. Crie um arquivo chamado Dockerfile na raíz do projeto. Use como base os templates de projetos recentes anteriores, e atualize o url do git presente no arquivo, mudando o nome do projeto e o token de oauth do github."]},{"l":"Criando o container","p":["Dê um git pull no repositório de docker_compose da Struct, e crie uma pasta com o nome do projeto. Modifique o template de docker-compose do Traefik com os nomes que podem ser usados para identificar o projeto nos logs, caso ocorra algum erro.","Além da configuração do traefik, é importante definir a imagem que será usada com o valor de image, alterar os valores de environment, restart, volumes, e networks. Use um projeto anterior como base.","Crie o container usando o comando docker-compose up -d. A imagem será baixada do repositório da Struct, e o container será criado e rodado em plano de fundo."]}],[{"i":"o-que-é-gitgithub-","l":"O que é Git/GitHub ?"},{"l":"Git","p":["O Git é um sistema de controle de versão usado para rastrear e gerenciar as mudanças em arquivos de um projeto. Ele permite que várias pessoas trabalhem juntas em um mesmo projeto, registrando todas as alterações feitas ao longo do tempo. Com o Git, é possível voltar a versões anteriores, colaborar com outros desenvolvedores e manter um histórico completo das modificações. É uma ferramenta essencial para o desenvolvimento de software."]},{"l":"Git Hub","p":["O GitHub é uma plataforma online que utiliza o sistema de controle de versão Git para hospedar projetos de desenvolvimento de software. Ele oferece um ambiente colaborativo onde os desenvolvedores podem compartilhar, colaborar e controlar as versões de seu código-fonte. O GitHub permite que os projetos sejam acessíveis a qualquer pessoa, promovendo a transparência e a participação da comunidade. Além disso, o GitHub também oferece recursos para gerenciamento de problemas, solicitações de alteração, documentação e integração contínua, facilitando o processo de desenvolvimento colaborativo e garantindo uma melhor organização dos projetos."]},{"i":"qual-a-diferença-entre-git-e-github-","l":"Qual a diferença entre Git e GitHub ?","p":["O Git é uma ferramenta de controle de versão local que permite rastrear e gerenciar alterações em arquivos. Ele funciona no seu computador e registra as versões do seu código.Por outro lado, o GitHub é uma plataforma online baseada no Git. Ele permite que você armazene e compartilhe seus projetos Git de forma remota, ou seja , o Git é a tecnologia subjacente que permite o controle de versão, enquanto o GitHub é um serviço online que utiliza o Git para hospedar e aprimorar a colaboração em projetos de desenvolvimento de software."]}],[{"i":"como-instalar-o-git-","l":"Como instalar o Git ?"},{"l":"Windows","p":["Acesse o site oficial do Git e clique no botão de download para Windows;","Aguarde o arquivo de instalação ser baixado e execute-o;","Siga as instruções do assistente de instalação, aceitando as configurações padrão, a menos que você queira personalizá-las;","Selecione o editor de texto padrão que você deseja associar ao Git (recomenda-se usar o editor padrão sugerido);","Na etapa de \"Seleção de Componentes\", verifique se todas as opções estão selecionadas e clique em \"Avançar\";","Selecione \"Git from the command line and also from 3rd-party software\" para habilitar o uso do Git a partir da linha de comando;","Escolha o mecanismo de conversão de fim de linha (recomenda-se a opção padrão);","Marque a opção \"Use OpenSSL\" para garantir uma conexão segura;","Selecione o terminal padrão que você deseja usar com o Git (recomenda-se usar o Git Bash);","Conclua a instalação clicando em \"Avançar\" e, em seguida, em \"Concluir\";"]},{"l":"MacOS","p":["Existem várias opções para instalar o Git no macOS, porém iremos utilizar como base a domentação oficial do git que utiliza o Homebrew, um gerenciador de pacotes, para instalar o Git.","Abra o Terminal(Digite \"Terminal\" na barra de pesquisa e abre o aplicativo que aparecer)","Se você ainda não possui o Homebrew instalado, execute o seguinte comando no Terminal:","Depois que o Homebrew estiver instalado, execute o seguinte comando para instalar o Git:","Aguarde até que a instalação seja concluída."]},{"l":"Linux","p":["O Git já vem instalado com a maioria das distribuições do Linux, porém se o git não estiver instalado, você pode instalar o Git usando o gerenciador de pacotes padrão da sua distribuição.Além disso, é importante ressaltar que distribuições diferentes tem comandos diferentes para instalação, logo caso sua distribuição no seja ubuntu, olhe a documentação oficial para mais instruções.","Abra o Terminal.","No Ubuntu e em distribuições baseadas no Debian, execute o seguinte comando:","Aguarde até que a instalação seja concluída."]},{"i":"como-verificar-se-o-git-esta-instalado","l":"Como verificar se o Git esta instalado?","p":["Após concluir a instalação no seu respectivo sistema operacional, você pode verificar se o Git está corretamente instalado digitando o comando abaixo no terminal, o qual devera retornar a versão do git instalada."]},{"i":"tem-mais-alguma-coisa-para-fazer","l":"Tem mais alguma coisa para fazer?","p":["Após concluir a instalação do Git e verificar se ele esta instalado, siga os proximos passos para fazer configuração inicial do Git.","Abra seu terminal;","Execute os seguintes comando, para salvar seu usuario e email do GitHub:"]},{"i":"quer-saber-mais-sobre-git-","l":"Quer saber mais sobre Git ?","p":["-------------------> Documentação oficial do Git.<--------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do Git"},{"l":"Git Init","p":["O comando git init é usado para inicializar um repositório Git em um diretório específico. Quando você executa o git init em um diretório vazio ou existente, ele cria um novo repositório Git local nesse local.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git init:","Criação do repositório: O comando git init cria uma pasta oculta chamada \".git\" no diretório atual. Essa estrutura é onde o Git armazenará todas as informações relacionadas ao controle de versão( evitar mexer na pasta a não ser que seja necessario ou que voce saiba o que esta fazendo).","Pronto para versionamento: Após a execução bem-sucedida do comando git init, o diretório atual está pronto para o versionamento. Agora você pode começar a adicionar arquivos ao repositório, realizar commits para registrar as alterações e usar outros comandos do Git para gerenciar o histórico e colaborar com outras pessoas.","É importante lembrar que o git init cria apenas um REPOSITÓRIO LOCAL. Se você deseja compartilhar seu repositório com outras pessoas ou colaborar em um projeto, você pode usar serviços de hospedagem em varias plataformas online (GitHub, GitLab, Bitbucket e etc), porém na Struct a platarforma principal e o GitHub para criar um REPOSITÓRIO REMOTO onde outros desenvolvedores possam contribuir."]},{"l":"Git Remote","p":["O comando git remote é usado para visualizar, adicionar ou remover repositórios remotos em seu repositório local. Os repositórios remotos são os locais onde você envia ou recebe as alterações do seu código.","Aqui está uma explicação passo a passo do que você pode fazer com o comando git remote:","Visualizar repositórios remotos: Quando você executa git remote, ele lista os repositórios remotos atualmente configurados para o seu repositório local. Por padrão, o repositório remoto principal é chamado de origin, que é usado para enviar e receber alterações.","Adicionar repositórios remotos: Você pode usar o comando git remote add link_do_repositorio para adicionar um novo repositório remoto ao seu repositório local. Isso é útil quando você deseja colaborar em um projeto hospedado em um serviço de hospedagem Git, como o GitHub, o GitLab ou o Bitbucket.","Remover repositórios remotos: Com o comando git remote remove nome_do_repositorio, você pode remover um repositório remoto existente do seu repositório local. Isso é útil se você não deseja mais colaborar com um determinado repositório remoto."]},{"l":"Git Status","p":["O comando git status é útil para entender o estado do seu repositório e tomar decisões sobre quais ações devem ser tomadas em relação aos arquivos modificados. Ele ajuda a garantir que você esteja ciente de todas as mudanças antes de realizar um commit ou realizar outras operações no Git.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git status:","Status do branch: O git status mostrará em qual branch você está trabalhando no momento. Será exibido o nome da branch atual.","Ramificações: O comando irá informar se há commits na branch atual que ainda não foram enviados para o BRANCH REMOTO correspondente (se você estiver trabalhando com um REPOSITÓRIO REMOTO).","Mudanças não rastreadas: Se houver arquivos no seu diretório de trabalho que ainda não foram adicionados ao controle de versão do Git, o git status os listará como \"untracked\" (não rastreados). Isso significa que o Git não está acompanhando esses arquivos.","Mudanças a serem confirmadas: O git status mostrará os arquivos modificados que já estão sob o controle do Git. Essas alterações estão prontas para serem adicionadas ao próximo commit.","Mudanças confirmadas: Se você já fez um commit, o git status informará que o diretório de trabalho está limpo, ou seja, não há alterações pendentes.","Sugestões de próximos passos: O git status também pode fornecer sugestões sobre o que fazer em seguida, com base no estado atual do repositório. Por exemplo, pode sugerir comandos como git add para adicionar arquivos ao commit ou git branch para listar as ramificações disponíveis."]},{"l":"Git Add","p":["O comando git add é usado para adicionar arquivos ao índice (também conhecido como área de stage) do Git. Ele prepara os arquivos para serem incluídos no próximo commit.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git add:","Adicionando arquivos ao índice: O git add permite que você especifique um ou mais arquivos que deseja adicionar ao índice. Por exemplo, você pode usar git add nome_arquivo para adicionar um arquivo específico ou git add . para adicionar TODOS os arquivos modificados no diretório atual.","Preparação para o próximo commit: Ao adicionar os arquivos ao índice, você está preparando-os para serem incluídos no próximo commit. O índice é uma área intermediária entre o diretório de trabalho (onde você edita os arquivos) e o repositório Git (onde os commits são registrados).","Rastreamento de alterações: Quando você adiciona um arquivo ao índice, o Git começa a rastrear as alterações feitas nele. Isso significa que o Git será capaz de registrar essas alterações no próximo commit.","Preparando um commit parcial: O git add também pode ser usado para criar commits parciais, selecionando apenas partes específicas de um arquivo para serem adicionadas ao índice. Isso é útil quando você fez várias alterações em um arquivo, mas deseja commitar apenas algumas delas.","Verificação do status: Após executar git add, você pode usar o comando git status para verificar o status do repositório e ver quais arquivos foram adicionados ao índice.","Lembrando que o git add não realiza um commit imediato, apenas prepara os arquivos para serem incluídos no próximo commit. Para registrar as alterações no repositório, você ainda precisa executar o comando git commit posteriormente."]},{"l":"Git Commit","p":["O comando git commit é usado para criar um novo commit no repositório Git. Um commit é uma confirmação das alterações feitas em um conjunto de arquivos, representando um ponto específico no histórico do projeto.","Aqui está uma explicação passo a passo do acontece quando você executa o comando git commit:","Preparando o commit: Antes de executar o comando git commit, é importante ter usado o comando git add para adicionar os arquivos desejados ao índice (área de stage). Esses arquivos são preparados para fazer parte do commit.","Abrindo o editor de mensagens: Quando você executa git commit, o Git abre um editor de texto para que você possa fornecer uma mensagem de commit. Essa mensagem descreve as alterações que estão sendo adicionadas no commit.","Escrevendo a mensagem de commit: No editor de texto, você deve escrever uma mensagem clara e concisa que descreva as alterações realizadas. A mensagem de commit é uma parte essencial do histórico do projeto e ajuda a entender o que foi alterado no commit.","Salvando o commit: Após escrever a mensagem de commit, você salva e fecha o editor de texto. Nesse momento, o Git cria um novo commit contendo todas as alterações que foram adicionadas ao índice. O commit é identificado por um hash exclusivo, que o torna único dentro do repositório.","Registrando as alterações no histórico: O commit é registrado no histórico do projeto, criando um novo ponto no histórico do desenvolvimento. Ele armazena uma versão dos arquivos e suas alterações correspondentes.","Rastreando o histórico: O Git mantém um histórico completo dos commits, permitindo que você navegue entre diferentes versões dos arquivos e reverta alterações, se necessário.","O comando git commit pode ser utilizado de forma sucinta git commit -m frase_sobre_o_que_fez_no_commit, a fim de simplificar o processo de abrir um editor de texto e aumentar a praticidade no versionamento."]},{"l":"Git Push","p":["O comando git push é usado para enviar as alterações locais do seu repositório Git para um repositório remoto. Ele atualiza o branch remoto com os commits feitos localmente.","Aqui está uma explicação passo a passo do que acontece quando você executa o comando git push:","Identificando o repositório remoto: Antes de usar o git push, você precisa configurar um repositório remoto usando o comando git remote add link_repositorio. Isso define um nome para o repositório remoto, geralmente chamado de origin, que é usado como referência para o push.","Verificando o branch atual: O git push envia as alterações do branch atual para o branch correspondente no repositório remoto. É importante garantir que você esteja no branch correto antes de executar o push.","Autenticação e conexão: O Git irá autenticar você com o repositório remoto, solicitando suas credenciais, caso necessário. Ele também estabelecerá uma conexão segura com o repositório remoto.","Enviando os commits: Quando você executa git push, o Git enviará os commits locais que não estão presentes no repositório remoto. Esses commits incluem as alterações que você fez e registrou localmente usando o git commit.","Atualizando o branch remoto: O repositório remoto receberá os commits enviados e atualizará o branch correspondente. Se não houver conflitos, o branch remoto será atualizado com as alterações do branch local.","Confirmação do push: Após a conclusão do git push, você receberá uma confirmação de que os commits foram enviados com sucesso e o branch remoto foi atualizado."]},{"l":"Git Clone","p":["Comando git clone é usado para criar uma cópia local de um repositório remoto existente. Ele permite que você baixe todo o histórico do projeto, incluindo todos os branches e commits, para o seu ambiente de desenvolvimento local, como tambem é a maneira mais comum de iniciar o desenvolvimento em um projeto existente.","Aqui está uma explicação passo a passo do que acontece quando você executa o comando git clone:","Identificando o repositório remoto: Ao executar o comando git clone link_do_repositorio, você precisa fornecer o URL do repositório remoto que deseja clonar. O URL pode ser obtido, por exemplo, a partir da página do projeto no GitHub.","Criando uma cópia local: O git clone cria uma cópia exata do repositório remoto em seu diretório local. Ele cria um novo diretório com o nome do projeto e faz o download de todos os arquivos, commits e branches do repositório remoto.","Estabelecendo conexão: O Git estabelece uma conexão com o repositório remoto e autentica você, solicitando suas credenciais, se necessário. Isso permite que você acesse o repositório e baixe todas as informações relacionadas.","Baixando o histórico do projeto: Ao executar o git clone, o Git baixa todo o histórico do projeto, incluindo todos os commits e branches. Você terá uma cópia local completa do repositório, pronta para uso.","Configurações adicionais: Além do histórico do projeto, o git clone também pode baixar outras configurações do repositório, como hooks personalizados ou arquivos de configuração específicos."]},{"i":"quer-saber-mais-comandos-do-git-","l":"Quer saber mais comandos do Git ?","p":["-------------------> Documentação oficial do Github.<--------------------"]}],[{"i":"o-que-é-npm-","l":"O que é NPM ?","p":["NPM (Node Package Manager) é um gerenciador de pacotes para o ambiente de execução JavaScript/Node.js. Ele permite que desenvolvedores instalem, compartilhem e gerenciem as dependências de um projeto de maneira eficiente. O NPM facilita a obtenção de bibliotecas e ferramentas de terceiros, simplificando o processo de desenvolvimento, pois você pode aproveitar o trabalho de outros desenvolvedores em vez de começar do zero. Além disso, o NPM também fornece recursos para ajudar na criação e publicação de seus próprios pacotes JavaScript, permitindo que outros desenvolvedores os utilizem em seus projetos. No geral, o NPM é uma ferramenta fundamental no ecossistema Node.js e JavaScript, tornando o desenvolvimento mais eficiente e colaborativo."]}],[{"i":"como-instalar-o-npm-","l":"Como instalar o NPM ?","p":["Ao instalar o Node.js por meio do NVM ou do site oficia, geralmente é incluído um pacote chamado \"Node Package Manager\" que instala o NPM juntamente com o Node.js. Portanto, na prática, a maioria das instalações do Node.js incluem o NPM por padrão, consequentemente não é necessario fazer uma instalação a parte."]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do NPM"},{"l":"Instalar um pacote"},{"l":"Remover um pacote"},{"l":"Iniciar um projeto novo"},{"l":"Atualiza os pacotes do projeto"},{"l":"Lista todas as dependências do projeto"},{"l":"Instalação limpa das dependências"},{"i":"quer-saber-mais-comandos-do-npm-","l":"Quer saber mais comandos do NPM ?","p":["-------------------> Documentação oficial do NPM.<--------------------"]}],[{"i":"o-que-é-nvm-","l":"O que é NVM ?","p":["NVM (Node Version Manager) é uma ferramenta que permite a instalação e gerenciamento de várias versões do Node.js em um único sistema. O Node.js é uma plataforma de desenvolvimento de software construída sobre o motor de JavaScript V8 do Chrome. Ele permite que você execute código JavaScript fora do navegador, o que o torna uma opção popular para criar aplicativos web do lado do servidor.O NVM foi criado para resolver um problema comum que os desenvolvedores enfrentam ao trabalhar com o Node.js: a necessidade de alternar entre diferentes versões do Node.js em um mesmo sistema."]}],[{"i":"como-instalar-o-nvm-","l":"Como instalar o NVM ?"},{"l":"Comandos para instalar o NVM","p":["Instalar o Curl","Instalar o NVM","Reinicie o terminal"]},{"i":"quer-saber-sobre-mais-sobre-nvm-","l":"Quer saber sobre mais sobre NVM ?","p":["----------------------> Repositorio NVM<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos basicos NVM"},{"i":"listar-versões-disponiveis-do-nodejs-para-instalar","l":"Listar versões disponiveis do Node.js para instalar"},{"i":"instalar-uma-versão-especifica-do-nodejs","l":"Instalar uma versão especifica do Node.js"},{"i":"mostrar-as-versões-do-nodejs-instaladas","l":"Mostrar as versões do Node.js instaladas"},{"i":"remover-uma-versão-instalada-do-nodejs","l":"Remover uma versão instalada do Node.js"},{"l":"Definir uma versão como global"},{"l":"Definir uma versão no terminal"},{"i":"quer-saber-mais-comandos-do-nvm-","l":"Quer saber mais comandos do NVM ?","p":["----------------------> repositorio NVM<-----------------------"]}],[{"i":"o-que-é-postgresql-","l":"O que é PostgreSQL ?","p":["O PostgreSQL é um sistema de gerenciamento de banco de dados relacional de código aberto. Ele é frequentemente referido como Postgres e é amplamente utilizado para armazenar e gerenciar dados estruturados. O PostgreSQL oferece recursos avançados de gerenciamento de dados, como suporte para consultas complexas, transações ACID (Atomicidade, Consistência, Isolamento e Durabilidade), integridade referencial e replicação.Uma das características distintas do PostgreSQL é a sua extensibilidade. Ele permite que os usuários criem suas próprias funções, tipos de dados personalizados e até mesmo estendam a linguagem SQL para atender às necessidades específicas da aplicação."]}],[{"i":"como-instalar-o-postgresql-","l":"Como instalar o PostgreSQL ?"},{"l":"Comandos para instalar o PostgreSQL","p":["Crie a configuração do repositório de arquivos","Instale o pacote PostgresSQL","Atualize as listas de pacotes","Instale a versão mais recente do PostgreSQL","Verifique se a instalação deu certo"]},{"i":"quer-saber-sobre-mais-sobre-postgresql-","l":"Quer saber sobre mais sobre PostgreSQL ?","p":["----------------------> Documentação oficial PostgreSQL<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do PostgreSQL"},{"l":"iniciar servidor"},{"l":"verificar status do servidor"},{"l":"parar servidor"},{"l":"executar utilitário psql"}],[{"i":"o-que-é-rbenv-","l":"O que é RBenv ?","p":["Rbenv é uma ferramenta de gerenciamento de versões do Ruby. Ela permite que os desenvolvedores instalem, gerenciem e alternem facilmente entre diferentes versões do Ruby em seus ambientes de desenvolvimento.A principal vantagem do rbenv é fornecer um ambiente isolado para cada projeto, permitindo que você especifique uma versão específica do Ruby por projeto. Isso é útil porque diferentes projetos podem ter dependências ou requisitos específicos de uma determinada versão do Ruby. O rbenv facilita a criação e a manutenção desses ambientes isolados.Além disso, o rbenv permite a instalação de plugins adicionais para estender suas funcionalidades. Por exemplo, o plugin \"ruby-build\" pode ser usado em conjunto com o rbenv para facilitar a instalação de diferentes versões do Ruby."]}],[{"i":"como-instalar-o-rbenv-","l":"Como instalar o RBenv ?"},{"l":"Comandos para instalação do RBenv","p":["Instalar o Curl","Obter o script de instalação do RBenv","Colocar o RBenv no PATH","Verificar se a instalação foi bem sucedida"]},{"i":"quer-saber-sobre-mais-sobre-rbenv-","l":"Quer saber sobre mais sobre RBenv ?","p":["----------------------> Documentação oficial RBenv<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do RBenv"},{"l":"Listar versões disponiveis do Ruby para instalar"},{"i":"listar-versões-do-ruby--instaladas","l":"Listar versões do Ruby instaladas"},{"l":"Instalar versão especifica do Ruby"},{"l":"Definir uma versão como global"},{"l":"Definir uma versão no terminal"},{"l":"Remover uma versão do Ruby instalada"},{"i":"quer-saber-mais-comandos-do-rbenv-","l":"Quer saber mais comandos do RBenv ?","p":["----------------------> Documentação oficial RBenv<-----------------------"]}],[{"i":"o-que-é-active-model-serializers-","l":"O que é Active Model Serializers ?","p":["O Active Model Serializers é uma biblioteca popular do Ruby on Rails projetada para ajudar a simplificar a serialização de objetos complexos em formatos como JSON, XML, etc. A biblioteca é utilizada para definir como os dados do modelo Rails devem ser serializados e estruturados antes de serem enviados como resposta em uma API, por exemplo.Quando você está construindo uma API com o Rails, é comum precisar transformar objetos do modelo (como registros de banco de dados) em um formato que possa ser facilmente consumido por aplicativos cliente ou outros serviços. É aí que o Active Model Serializers entra em ação.A biblioteca permite que você defina como um objeto do modelo deve ser serializado, especificando os atributos a serem incluídos, as associações a serem aninhadas, a formatação dos dados, entre outros detalhes. Você pode criar uma classe serializer personalizada para cada modelo ou usar um serializer padrão gerado automaticamente."]}],[{"i":"como-instalar-active-model-serializers-","l":"Como instalar Active Model Serializers ?","p":["Adicionar a gem no Gemfile:","Instalar as dependências:"]}],[{"i":"como-usar-active-model-serializers-","l":"Como usar Active Model Serializers ?"},{"l":"Utilizando Active Model Serializers","p":["Criar uma Serializer","Para criar uma serializer no Rails, você pode usar o gerador de scaffolding, que gera automaticamente a estrutura básica para sua serializer. Por exemplo, para criar uma serializer \"User\", você poderia executar o seguinte comando:","Filtrar os dados da requisição"]},{"i":"quer-saber-mais-sobre-active-model-serializers","l":"Quer saber mais sobre Active Model Serializers?","p":["------------> Documentação oficial Active Model Serializers.<-------------------"]}],[{"i":"o-que-é-uma-controller-","l":"O que é uma Controller ?","p":["Uma Controller é um termo comumente usado na área de desenvolvimento de software, especialmente em arquiteturas de aplicativos web. Em sistemas que seguem o padrão de design MVC (Model-View-Controller), a controller é uma das três principais partes que compõem essa arquitetura.A controller é responsável por lidar com a lógica do aplicativo, recebendo as solicitações dos usuários (através das rotas ou URLs) e coordenando as ações apropriadas. Quando um usuário interage com a interface do aplicativo, como clicar em um botão, enviar um formulário ou fazer uma solicitação HTTP, essa ação é capturada pela controller."]}],[{"i":"como-usar-uma-controller-","l":"Como usar uma Controller ?"},{"l":"Utilizando uma Controller","p":["Criar uma controller","Para criar uma controller no Rails, você pode usar o gerador de scaffolding, que gera automaticamente a estrutura básica para sua controller Por exemplo, para criar uma controller \"User\", você poderia executar o seguinte comando:","Definir ações na controller","Definir rota","Rode o servidor localmente","Conferir se a controller e rota estão funcionando","Abrir ThunderClient/Insomnia/Postman;","Crie um nova request;","Configure o metodo de requisição como GET;","Faça uma requisição para a seguinte url:","Se o resultado for todos os usuarios do banco de dados, a rota e controller estão funcionando."]},{"i":"quer-saber-mais-sobre-controller","l":"Quer saber mais sobre Controller?","p":["---------------> Documentação oficial Controller do Rails.<-------------------"]}],[{"i":"o-que-é-uma-controller-","l":"O que é uma Controller ?","p":["O Devise é uma poderosa biblioteca de autenticação de usuário. O Devise é um plug-in que simplifica a implementação de funcionalidades de autenticação, como registro, login, recuperação de senha, confirmação de conta e muito mais.Com o Devise, os desenvolvedores podem adicionar rapidamente autenticação a um aplicativo Rails sem ter que escrever todo o código manualmente. Ele oferece uma série de recursos prontos para uso e é altamente configurável para atender às necessidades específicas do projeto."]}],[{"i":"como-instalar-o-devise-","l":"Como instalar o Devise ?","p":["Adicionar a gem no Gemfile:","Instalar as dependências:","Configurar o Devise:"]}],[{"i":"como-usar-o-devise-","l":"Como usar o Devise ?"},{"l":"Utilizando o Devise","p":["Criar uma model com devise","Para criar uma model com Devise no Rails, você pode usar o gerador de scaffolding, que gera automaticamente a estrutura básica para sua model. Por exemplo, para criar uma model \"User\", você poderia executar o seguinte comando:","É importante ressaltar que a model não tem um campo de senha, porem tem um campo encrypted_password, o qual garanti que não seja possível visualizar a senha dos usuários que forem cadastrados em nossa aplicação.Além disso, o campo email vem como padrão ao criar uma model com devise.","Executar migração","Verificando a tabela no banco de dados"]},{"i":"quer-saber-mais-sobre-devise","l":"Quer saber mais sobre Devise?","p":["---------------> Documentação oficial do Devise.<-------------------"]}],[{"i":"o-que-é-factory-bot-","l":"O que é Factory Bot ?","p":["Factory Bot é uma biblioteca de teste muito popular em ecossistemas de desenvolvimento web, especialmente em projetos Ruby on Rails. Essa biblioteca é usada para criar objetos de teste, também conhecidos como \"factories\" (fábricas), de forma fácil e organizada.Em cenários de teste, é comum precisarmos criar instâncias de modelos ou objetos para simular o comportamento do aplicativo ou sistema em diferentes situações. Por exemplo, ao testar uma funcionalidade de login, você pode precisar criar vários objetos de usuário com diferentes atributos, como nome, email, senha, etc., para verificar como o sistema se comporta em casos diversos."]}],[{"i":"como-instalar-factory-bot-","l":"Como instalar Factory Bot ?","p":["Adicionar a gem no Gemfile:","Instalar as dependências:","Configurar o Factory Bot:"]}],[{"i":"como-usar-factory-bot-","l":"Como usar Factory Bot ?"},{"l":"Utilizando Factory Bot","p":["Definir as factories","Crie arquivos para as factories em spec/factories, em que cada arquivo representará uma model. Por exemplo, se você tiver um modelo chamado User, crie um arquivo chamado user.rb em spec/factories.Nesse arquivo, coloque a estrutura apresentada a baixo, adaptando ao seu contexto e necessidades.","Utilizar as factories nos testes:","Para utilizar as factories na criação de testes, basta seguir a estrutura a baixo, adequando os testes ao seu contexto e necessidades."]},{"i":"quer-saber-mais-sobre-factory-bot","l":"Quer saber mais sobre Factory Bot?","p":["---------------> Documentação oficial do Factory Bot.<-------------------"]}],[{"i":"o-que-é-model-","l":"O que é Model ?","p":["Em Ruby on Rails, uma \"model\" é uma classe que representa uma tabela em um banco de dados. No padrão MVC (Model-View-Controller) do Rails, a \"model\" é responsável por lidar com a lógica de negócios, a interação com o banco de dados e a validação dos dados antes de serem armazenados ou recuperados do banco de dados.As principais funcionaliades das models são: representar os dados, consultar o banco de dados, validar os dados e estabelecer associações entre elas."]}],[{"i":"como-usar-uma-model-","l":"Como usar uma Model ?"},{"l":"Utilizando as Models","p":["Criar uma model","Para criar uma model no Rails, você pode usar o gerador de scaffolding, que gera automaticamente a estrutura básica para sua model. Por exemplo, para criar uma model \"User\", você poderia executar o seguinte comando:","Executar migração","Verificando a tabela no banco de dados"]},{"i":"quer-saber-mais-sobre-model","l":"Quer saber mais sobre Model?","p":["-------------> Documentação oficial de Models do Rails.<-------------------"]}],[{"i":"o-que-é-rspec-","l":"O que é RSpec ?","p":["RSpec é uma biblioteca de testes escrita para a linguagem de programação Ruby. Ela fornece uma estrutura de testes poderosa e expressiva, projetada para facilitar a tarefa de escrever testes claros e legíveis para seu código Ruby. O nome \"RSpec\" é uma combinação de \"Ruby\" e \"Specification\" (Especificação em inglês), refletindo seu propósito de especificar o comportamento do código Ruby.A biblioteca RSpec segue o paradigma de Test-Driven Development (TDD) e Behavior-Driven Development (BDD), incentivando os desenvolvedores a escreverem testes antes de implementar o código propriamente dito. Isso ajuda a definir claramente o comportamento esperado de cada parte do código e, assim, guia o desenvolvimento do software de forma mais estruturada e confiável."]}],[{"i":"como-instalar-rspec-","l":"Como instalar RSpec ?","p":["Adicionar a gem no Gemfile:","Instalar as dependências:","Configurar o RSpec:"]}],[{"i":"como-usar-rspec-","l":"Como usar RSpec ?"},{"l":"Utilizando Rspec","p":["Escrevendo testes","Os testes com RSpec são escritos em arquivos com extensão .rb na pasta spec. Existem três tipos principais de blocos de teste:","Describe: É usado para descrever o que está sendo testado. Pode ser uma classe, método ou um conjunto de comportamentos relacionados.","Context: É usado para definir o contexto do teste. Pode ajudar a agrupar os testes com base em diferentes cenários ou estados.","It: Contém o teste real. Descreve o comportamento esperado do código.","Expect: definir o objeto (valor) que você deseja testar. Ele aceita como argumento a expressão ou o resultado que você quer avaliar. Normalmente, essa expressão é a que retorna o resultado do código que está sendo testado.","To: Indicar a expectativa do que a expressão definida no expect deve ser igual. A palavra-chave to é seguida de um \"matcher\" (correspondente), que é usado para verificar se o valor esperado é igual ao valor real.","Eq: É um dos \"matchers\" do RSpec. Ele verifica se o valor à esquerda do eq é igual ao valor à direita. Se a expressão avaliada no expect for igual ao valor definido após o eq, o teste passa; caso contrário, o teste falhará.","Segue a baixo uma estrutura basica de teste:","Executando testes"]},{"i":"quer-saber-mais-sobre-rspec","l":"Quer saber mais sobre RSpec?","p":["---------------> Documentação oficial do RSpec.<-------------------"]}],[{"i":"o-que-é-simple-token-authentication-","l":"O que é Simple Token Authentication ?","p":["O Simple Token Authentication é uma biblioteca de autenticação em Ruby on Rails que permite aos usuários acessarem recursos protegidos por meio do uso de tokens. Esse tipo de autenticação é frequentemente usado em aplicações de API, onde os usuários fornecem um token de acesso válido em suas solicitações para acessar determinadas funcionalidades ou dados.Essa abordagem é eficaz para autenticação de API, pois elimina a necessidade de manter sessões no lado do servidor, tornando a comunicação mais eficiente e escalável. Além disso, os tokens de acesso podem ser configurados para expirar após um determinado período, adicionando uma camada adicional de segurança."]}],[{"i":"como-instalar-simple-token-authentication-","l":"Como instalar Simple Token Authentication ?","p":["Adicionar a gem no Gemfile:","Instalar as dependências:","Configurar o Simple Token Authentication:"]}],[{"i":"como-usar-simple-token-authentication-","l":"Como usar Simple Token Authentication ?"},{"l":"Utilizando Simple Token Authentication","p":["Defina qual model será necessario autenticação","É importante ressaltar que a model escolhida precisa ser criada com devise.","Adicionar campo authentication_token no bando de dados","Executar migração","Definir quais controladores manipularão a autenticação de token"]},{"i":"quer-saber-mais-sobre-simple-token-authentication","l":"Quer saber mais sobre Simple Token Authentication?","p":["------------> Documentação oficial Simple Token Authentication.<-------------------"]}],[{"i":"o-que-é-rvm-","l":"O que é RVM ?","p":["O RVM é uma ferramenta popular para gerenciar versões do Ruby em um ambiente de desenvolvimento.O Ruby é uma linguagem de programação dinâmica de código aberto, conhecida por sua simplicidade e expressividade. Com o RVM, os desenvolvedores podem instalar, gerenciar e alternar entre diferentes versões do Ruby em seus sistemas. Isso é especialmente útil quando se trabalha em projetos que dependem de versões específicas do Ruby ou quando se deseja testar uma aplicação em diferentes versões da linguagem."]}],[{"i":"como-instalar-o-rvm-","l":"Como instalar o RVM ?"},{"l":"Comandos para instalação do RVM"},{"l":"Instalar o Curl e dependecias necessarias"},{"l":"Obter as chaves GPG necessárias para a instalação"},{"l":"Instalar RVM"},{"l":"Verificar se a instalação foi bem sucedida"},{"i":"quer-saber-sobre-mais-sobre-rvm-","l":"Quer saber sobre mais sobre RVM ?","p":["----------------------> Documentação oficial RVM<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos Basicos do RVM"},{"l":"Listar versões disponiveis do Ruby para instalar"},{"i":"listar-versões-do-ruby--instaladas","l":"Listar versões do Ruby instaladas"},{"l":"Instalar versão especifica do Ruby"},{"l":"Definir uma versão global"},{"l":"Definir uma versão no terminal"},{"l":"Remover uma versão instalada"},{"i":"quer-saber-mais-comandos-do-rvm-","l":"Quer saber mais comandos do RVM ?","p":["----------------------> Documentação oficial RVM<-----------------------"]}],[{"i":"o-que-é-wsl-","l":"O que é WSL ?","p":["O Subsistema do Windows para Linux, tambem conhecido como WSL, é uma excelente ferramenta para usuarios de Windows que desejam utilizar o Linux, visto que esse sistema operacional é atrativo para programadores, devido as facilidades e praticidades que ele proporciona com relação ao Windows. Além disso, essa ferramenta é uma das melhores formas de usar dois sistemas operacionais concomitantemente, tendo em vista que, outros metodos, como por exemplo, dual boot e maquinas virtuais são mais complexos e custosos para serem implementados, porém caso não seja possivel utilizar o WSL, esses metodos podem ser soluções substitutivas."]}],[{"i":"como-instalar-o-wsl-","l":"Como instalar o WSL ?"},{"l":"Comandos para instalação do WSL"},{"l":"Instalar o WSL"},{"l":"Verificar se a instalação deu certo"},{"i":"quer-saber-mais-sobre-wsl-","l":"Quer saber mais sobre WSL ?","p":["----------------------> Documentação oficial WSL<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos basicos WSL"},{"l":"Listar distribuições do Linux disponiveis para instalação"},{"l":"Instalar uma distribuição do Linux"},{"l":"Listar distribuições do Linux instaladas"},{"l":"Mudar versão padrão do WSL"},{"l":"Usar uma distribuição especifica"},{"l":"Listar comandos disponiveis do WSL"},{"i":"quer-saber-mais-comandos-do-wsl-","l":"Quer saber mais comandos do WSL ?","p":["----------------------> Documentação oficial WSL<-----------------------"]}],[{"i":"o-que-é-yarn-","l":"O que é Yarn ?","p":["Yarn é um gerenciador de pacotes para projetos JavaScript. Assim como o NPM, o Yarn permite que os desenvolvedores instalem, compartilhem e gerenciem as dependências de um projeto de forma eficiente. No entanto, o Yarn foi criado para abordar algumas limitações e problemas de desempenho do NPM.Uma das principais vantagens do Yarn é a sua velocidade. Ele utiliza um mecanismo de caching (armazenamento em cache) inteligente, o que significa que, uma vez que um pacote é baixado, ele será armazenado localmente e reutilizado quando necessário, reduzindo o tempo de download. Além disso, o Yarn executa as operações de forma paralela, o que pode acelerar significativamente a instalação e atualização das dependências."]}],[{"i":"como-instalar-o-yarn-","l":"Como instalar o Yarn ?"},{"l":"Com NPM","p":["Instalar o Yarn com NPM","Verificar se a instalação deu certo"]},{"l":"Sem NPM","p":["Instalar o Curl","Importar a chave GPG","Adicionar e habilitar o repositório oficial do Yarn","Atualizar o cache do sistema","Instale o Yarn com os pacotes do Node.js","Verifique se a instalação deu certo"]},{"i":"quer-saber-mais-sobre-yarn-","l":"Quer saber mais sobre Yarn ?","p":["----------------------> Documentação oficial Yarn<-----------------------"]}],[{"i":"quais-comandos-posso-usar-","l":"Quais comandos posso usar ?"},{"l":"Comandos basicos Yarn"},{"l":"Baixar dependências do projeto"},{"l":"Iniciar o projeto"},{"i":"criar-um-arquivo-packagejson","l":"Criar um arquivo package.json"},{"i":"criar-o-arquivo-yarnlock","l":"Criar o arquivo yarn.lock"},{"i":"quer-saber-mais-comandos-do-yarn-","l":"Quer saber mais comandos do Yarn ?","p":["----------------------> Documentação oficial Yarn<-----------------------"]}],[{"l":"Bem-vindo a Diretoria de Projetos"}]]